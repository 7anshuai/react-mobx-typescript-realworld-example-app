{"version":3,"sources":["stores/commonStore.ts","stores/userStore.ts","stores/authStore.ts","agent.ts","stores/articleStore.ts","stores/commentStore.ts","stores/editorStore.ts","stores/profileStore.ts","stores/index.ts","store.tsx","components/Header.tsx","components/Home/Banner.tsx","components/ArticlePreview.js","components/ListPagination.js","components/LoadingSpinner.tsx","components/ArticleList.js","components/Home/MainView.tsx","components/Home/Tags.tsx","components/Home/index.tsx","components/ListErrors.tsx","components/Login.tsx","components/Register.tsx","components/PrivateRoute.tsx","components/Settings.tsx","components/RedError.tsx","components/Profile.tsx","components/Article/ArticleActions.tsx","components/Article/ArticleMeta.tsx","components/Article/CommentInput.tsx","components/Article/DeleteButton.tsx","components/Article/Comment.tsx","components/Article/CommentList.tsx","components/Article/CommentContainer.tsx","components/Article/index.tsx","components/Editor.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CommonStore","reaction","token","window","localStorage","setItem","removeItem","this","isLoadingTags","agent","Tags","getAll","then","action","tags","map","t","toLowerCase","finally","appLoaded","observable","getItem","UserStore","loadingUser","Auth","current","user","currentUser","newUser","updatingUser","save","undefined","AuthStore","username","values","email","password","inProgress","errors","login","commonStore","setToken","userStore","pullUser","catch","err","response","body","register","forgetUser","Promise","resolve","superagent","superagentPromise","_superagent","global","API_ROOT","encode","encodeURIComponent","handleErrors","status","authStore","logout","responseBody","res","tokenPlugin","req","set","requests","url","del","use","end","get","put","post","limit","count","p","omitSlug","article","Object","assign","slug","Articles","all","page","lim","byAuthor","author","query","byTag","tag","favorite","favoritedBy","_limit","feed","unfavorite","update","create","Comments","comment","delete","commentId","forArticle","Profile","follow","unfollow","articlesRegistry","clear","predicate","JSON","stringify","myFeed","isLoading","$req","articles","articlesCount","forEach","totalPagesCount","Math","ceil","acceptCached","getArticle","favorited","favoritesCount","data","loadArticles","ret","value","push","computed","articleSlug","comments","isLoadingComments","commentErrors","isCreatingComment","loadComments","id","idx","findIndex","c","splice","reset","articleStore","loadArticle","Error","title","description","tagList","includes","filter","updateArticle","createArticle","isLoadingProfile","profile","following","rootStore","commentStore","editorStore","profileStore","storeContext","React","createContext","useStore","store","useContext","LoggedOutView","props","className","to","LoggedInView","src","image","alt","Header","useObserver","appName","Banner","ArticlePreview","handleClickFavorite","ev","preventDefault","unmakeFavorite","makeFavorite","favoriteButtonClass","Date","createdAt","toDateString","onClick","key","ListPagination","range","i","v","isCurrent","currentPage","onSetPage","toString","href","style","borderRadius","width","height","margin","position","borderTop","borderRight","borderBottom","borderLeft","transform","animation","LoadingSpinner","ArticleList","loading","length","YourFeedTab","isActive","match","location","search","pathname","GlobalFeedTab","TagFilterTab","MainView","useLocation","tab","qsParse","getPredicate","useCallback","handleSetPage","setPage","useEffect","setPredicate","Home","a","async","loadTags","ListErrors","keys","Login","handleEmailChange","e","setEmail","target","handlePasswordChange","setPassword","handleSubmitForm","history","replace","onSubmit","type","placeholder","onChange","disabled","Register","handleUsernameChange","setUsername","PrivateRoute","SettingsForm","useState","bio","state","setState","updateState","field","newState","submitForm","onSubmitForm","rows","Settings","useHistory","handleClickLogout","updatingUserErrors","updateUser","wrapperStyle","display","justifyContent","errorStyle","padding","color","backgroundColor","RedError","message","EditProfileSettings","isUser","FollowUserButton","classes","Tabs","params","useParams","handleFollow","handleUnfollow","test","useMemo","loadProfile","ArticleActions","canModify","onDelete","ArticleMeta","observer","CommentInput","handleBodyChange","createComment","DeleteButton","show","Comment","CommentList","CommentContainer","Article","setArticleSlug","handleDeleteArticle","deleteArticle","handleDeleteComment","deleteComment","markup","__html","marked","sanitize","dangerouslySetInnerHTML","Editor","tagInput","loadInitialData","changeTitle","setTitle","changeDescription","setDescription","changeBody","setBody","changeTagInput","handleTagInputKeyDown","keyCode","handleAddTag","addTag","trim","submit","onBlur","onKeyDown","removeTag","handleRemoveTag","App","setAppLoaded","path","component","Boolean","hostname","ReactDOM","render","children","useLocalStore","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e4a0bc3.chunk.js","sourcesContent":["import { observable, action, reaction } from 'mobx';\nimport agent from '../agent';\n\nexport class CommonStore {\n\n  @observable appName = 'Conduit';\n  @observable token = window.localStorage.getItem('jwt');\n  @observable appLoaded = false;\n\n  @observable tags = [];\n  @observable isLoadingTags = false;\n\n  constructor() {\n    reaction(\n      () => this.token,\n      token => {\n        if (token) {\n          window.localStorage.setItem('jwt', token);\n        } else {\n          window.localStorage.removeItem('jwt');\n        }\n      }\n    );\n  }\n\n  @action loadTags() {\n    this.isLoadingTags = true;\n    return agent.Tags.getAll()\n      .then(action(({ tags }: { tags: any }) => { this.tags = tags.map((t: string) => t.toLowerCase()); }))\n      .finally(action(() => { this.isLoadingTags = false; }))\n  }\n\n  @action setToken(token: any) {\n    this.token = token;\n  }\n\n  @action setAppLoaded() {\n    this.appLoaded = true;\n  }\n\n}\n\nexport default new CommonStore();","import { observable, action } from 'mobx';\nimport agent from '../agent';\n\nexport class UserStore {\n\n  @observable currentUser: any;\n  @observable loadingUser: any;\n  @observable updatingUser: any;\n  @observable updatingUserErrors: any;\n\n  @action pullUser() {\n    this.loadingUser = true;\n    return agent.Auth.current()\n      .then(action(({ user }: { user: any }) => { this.currentUser = user; }))\n      .finally(action(() => { this.loadingUser = false; }))\n  }\n\n  @action updateUser(newUser: any) {\n    this.updatingUser = true;\n    return agent.Auth.save(newUser)\n      .then(action(({ user }: { user: any }) => { this.currentUser = user; }))\n      .finally(action(() => { this.updatingUser = false; }))\n  }\n\n  @action forgetUser() {\n    this.currentUser = undefined;\n  }\n\n}\n\nexport default new UserStore();\n","import { observable, action } from 'mobx';\nimport agent from '../agent';\nimport userStore from './userStore';\nimport commonStore from './commonStore';\n\nexport class AuthStore {\n  @observable inProgress = false;\n  @observable errors = undefined;\n\n  @observable values = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  @action setUsername(username: string) {\n    this.values.username = username;\n  }\n\n  @action setEmail(email: string) {\n    this.values.email = email;\n  }\n\n  @action setPassword(password: string) {\n    this.values.password = password;\n  }\n\n  @action reset() {\n    this.values.username = '';\n    this.values.email = '';\n    this.values.password = '';\n  }\n\n  @action login() {\n    this.inProgress = true;\n    this.errors = undefined;\n    return agent.Auth.login(this.values.email, this.values.password)\n      .then(({ user }: { user: any }) => commonStore.setToken(user.token))\n      .then(() => userStore.pullUser())\n      .catch(action((err: any) => {\n        this.errors = err.response && err.response.body && err.response.body.errors;\n        throw err;\n      }))\n      .finally(action(() => { this.inProgress = false; }));\n  }\n\n  @action register() {\n    this.inProgress = true;\n    this.errors = undefined;\n    return agent.Auth.register(this.values.username, this.values.email, this.values.password)\n      .then(({ user }: { user: any }) => commonStore.setToken(user.token))\n      .then(() => userStore.pullUser())\n      .catch(action((err: any) => {\n        this.errors = err.response && err.response.body && err.response.body.errors;\n        throw err;\n      }))\n      .finally(action(() => { this.inProgress = false; }));\n  }\n\n  @action logout() {\n    commonStore.setToken(undefined);\n    userStore.forgetUser();\n    return Promise.resolve();\n  }\n}\n\nexport default new AuthStore();\n","import superagentPromise from 'superagent-promise';\nimport _superagent from 'superagent';\nimport commonStore from './stores/commonStore';\nimport authStore from './stores/authStore';\n\nconst superagent = superagentPromise(_superagent, global.Promise);\n\nconst API_ROOT = 'https://conduit.productionready.io/api';\n\nconst encode = encodeURIComponent;\n\nconst handleErrors = (err: any) => {\n  if (err && err.response && err.response.status === 401) {\n    authStore.logout();\n  }\n  return err;\n};\n\nconst responseBody = (res: any) => res.body;\n\nconst tokenPlugin = (req: any) => {\n  if (commonStore.token) {\n    req.set('authorization', `Token ${commonStore.token}`);\n  }\n};\n\nconst requests = {\n  del: (url: string) =>\n    superagent\n      .del(`${API_ROOT}${url}`)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n  get: (url: string) =>\n    superagent\n      .get(`${API_ROOT}${url}`)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n  put: (url: string, body: any) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n  post: (url: string, body: any) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n};\n\nconst Auth = {\n  current: () =>\n    requests.get('/user'),\n  login: (email: string, password: string) =>\n    requests.post('/users/login', { user: { email, password } }),\n  register: (username: string, email: string, password: string) =>\n    requests.post('/users', { user: { username, email, password } }),\n  save: (user: any) =>\n    requests.put('/user', { user })\n};\n\nconst Tags = {\n  getAll: () => requests.get('/tags')\n};\n\nconst limit = (count: any, p: any) => `limit=${count}&offset=${p ? p * count : 0}`;\nconst omitSlug = (article: any) => Object.assign({}, article, { slug: undefined })\n\nconst Articles = {\n  all: (page: any, lim = 10, predicate: string) =>\n    requests.get(`/articles?${limit(lim, page)}`),\n  byAuthor: (author: string, page: number, query: any) =>\n    requests.get(`/articles?author=${encode(author)}&${limit(5, page)}`),\n  byTag: (tag: string, page: number, lim = 10) =>\n    requests.get(`/articles?tag=${encode(tag)}&${limit(lim, page)}`),\n  del: (slug: string) =>\n    requests.del(`/articles/${slug}`),\n  favorite: (slug: string) =>\n    requests.post(`/articles/${slug}/favorite`, {}),\n  favoritedBy: (author: string, page: number, _limit: number) =>\n    requests.get(`/articles?favorited=${encode(author)}&${limit(5, page)}`),\n  feed: (page: number, limit: number) =>\n    requests.get(`/articles/feed?limit=${limit}&offset=${page}`),\n  get: (slug: string) =>\n    requests.get(`/articles/${slug}`),\n  unfavorite: (slug: string) =>\n    requests.del(`/articles/${slug}/favorite`),\n  update: (article: any) =>\n    requests.put(`/articles/${article.slug}`, { article: omitSlug(article) }),\n  create: (article: any) =>\n    requests.post('/articles', { article })\n};\n\nconst Comments = {\n  create: (slug: string, comment: any) =>\n    requests.post(`/articles/${slug}/comments`, { comment }),\n  delete: (slug: string, commentId: number) =>\n    requests.del(`/articles/${slug}/comments/${commentId}`),\n  forArticle: (slug: string) =>\n    requests.get(`/articles/${slug}/comments`)\n};\n\nconst Profile = {\n  follow: (username: string) =>\n    requests.post(`/profiles/${username}/follow`, {}),\n  get: (username: string) =>\n    requests.get(`/profiles/${username}`),\n  unfollow: (username: string) =>\n    requests.del(`/profiles/${username}/follow`)\n};\n\nexport default {\n  Articles,\n  Auth,\n  Comments,\n  Profile,\n  Tags,\n};\n","import { observable, action, computed } from 'mobx';\nimport agent from '../agent';\n\nconst LIMIT = 10;\n\nexport class ArticleStore {\n\n  @observable isLoading = false;\n  @observable page = 0;\n  @observable totalPagesCount = 0;\n  @observable articlesRegistry = observable.map();\n  @observable predicate: any = {};\n\n  @computed get articles() {\n    const ret = []\n    const values = this.articlesRegistry.values();\n    for (let value of values) {\n      ret.push(value);\n    }\n    return ret;\n  };\n\n  clear() {\n    this.articlesRegistry.clear();\n    this.page = 0;\n  }\n\n  getArticle(slug: string) {\n    return this.articlesRegistry.get(slug);\n  }\n\n  @action setPage(page: number) {\n    this.page = page;\n  }\n\n  @action setPredicate(predicate: any) {\n    if (JSON.stringify(predicate) === JSON.stringify(this.predicate)) return;\n    this.clear();\n    this.predicate = predicate;\n  }\n\n  $req() {\n    if (this.predicate.myFeed) return agent.Articles.feed(this.page, LIMIT);\n    if (this.predicate.favoritedBy) return agent.Articles.favoritedBy(this.predicate.favoritedBy, this.page, LIMIT);\n    if (this.predicate.tag) return agent.Articles.byTag(this.predicate.tag, this.page, LIMIT);\n    if (this.predicate.author) return agent.Articles.byAuthor(this.predicate.author, this.page, LIMIT);\n    return agent.Articles.all(this.page, LIMIT, this.predicate);\n  }\n\n  @action loadArticles() {\n    this.isLoading = true;\n    return this.$req()\n      .then(action(({ articles, articlesCount }: { articles: any, articlesCount: number }) => {\n        this.articlesRegistry.clear();\n        articles.forEach((article: any) => this.articlesRegistry.set(article.slug, article));\n        this.totalPagesCount = Math.ceil(articlesCount / LIMIT);\n      }))\n      .finally(action(() => { this.isLoading = false; }));\n  }\n\n  @action loadArticle(slug: string, { acceptCached = false } = {}) {\n    if (acceptCached) {\n      const article = this.getArticle(slug);\n      if (article) return Promise.resolve(article);\n    }\n    this.isLoading = true;\n    return agent.Articles.get(slug)\n      .then(action(({ article }: { article: any}) => {\n        this.articlesRegistry.set(article.slug, article);\n        return article;\n      }))\n      .finally(action(() => { this.isLoading = false; }));\n  }\n\n  @action makeFavorite(slug: string) {\n    const article = this.getArticle(slug);\n    if (article && !article.favorited) {\n      article.favorited = true;\n      article.favoritesCount++;\n      return agent.Articles.favorite(slug)\n        .catch(action((err: Error) => {\n          article.favorited = false;\n          article.favoritesCount--;\n          throw err;\n        }));\n    }\n    return Promise.resolve();\n  }\n\n  @action unmakeFavorite(slug: string) {\n    const article = this.getArticle(slug);\n    if (article && article.favorited) {\n      article.favorited = false;\n      article.favoritesCount--;\n      return agent.Articles.unfavorite(slug)\n        .catch(action((err: Error) => {\n          article.favorited = true;\n          article.favoritesCount++;\n          throw err;\n        }));\n    }\n    return Promise.resolve();\n  }\n\n  @action createArticle(article: any) {\n    return agent.Articles.create(article)\n      .then(({ article }: { article:any }) => {\n        this.articlesRegistry.set(article.slug, article);\n        return article;\n      })\n  }\n\n  @action updateArticle(data: any) {\n    return agent.Articles.update(data)\n      .then(({ article }:{ article: any }) => {\n        this.articlesRegistry.set(article.slug, article);\n        return article;\n      })\n  }\n\n  @action deleteArticle(slug: string) {\n    this.articlesRegistry.delete(slug);\n    return agent.Articles.del(slug)\n      .catch(action((err: Error) => { this.loadArticles(); throw err; }));\n  }\n}\n\nexport default new ArticleStore();\n","import { observable, action } from 'mobx';\nimport agent from '../agent';\n\nexport class CommentStore {\n\n  @observable isCreatingComment = false;\n  @observable isLoadingComments = false;\n  @observable commentErrors = undefined;\n  @observable articleSlug: string = '';\n  @observable comments: any[] = [];\n\n  @action setArticleSlug(articleSlug: string) {\n    if (this.articleSlug !== articleSlug) {\n      this.comments = [];\n      this.articleSlug = articleSlug;\n    }\n  }\n\n  @action loadComments() {\n    this.isLoadingComments = true;\n    this.commentErrors = undefined;\n    return agent.Comments.forArticle(this.articleSlug)\n      .then(action(({ comments }: { comments: any[] }) => { this.comments = comments; }))\n      .catch(action((err: any) => {\n        this.commentErrors = err.response && err.response.body && err.response.body.errors;\n        throw err;\n      }))\n      .finally(action(() => { this.isLoadingComments = false; }));\n  }\n\n\n  @action createComment(comment: any) {\n    this.isCreatingComment = true;\n    return agent.Comments.create(this.articleSlug, comment)\n      .then(() => this.loadComments())\n      .finally(action(() => { this.isCreatingComment = false; }));\n  }\n\n  @action deleteComment(id: number) {\n    const idx = this.comments.findIndex(c => c.id === id);\n    if (idx > -1) this.comments.splice(idx, 1);\n    return agent.Comments.delete(this.articleSlug, id)\n      .catch(action((err: any) => { this.loadComments(); throw err }));\n  }\n}\n\nexport default new CommentStore();\n","import { observable, action } from 'mobx';\nimport articleStore from './articleStore';\n\nexport class EditorStore {\n\n  @observable inProgress = false;\n  @observable errors = undefined;\n  @observable articleSlug: string = '';\n\n  @observable title = '';\n  @observable description = '';\n  @observable body = '';\n  @observable tagList: string[] = [];\n\n  @action setArticleSlug(articleSlug: string) {\n    if (this.articleSlug !== articleSlug) {\n      this.reset();\n      this.articleSlug = articleSlug;\n    }\n  }\n\n  @action loadInitialData() {\n    if (!this.articleSlug) return Promise.resolve();\n    this.inProgress = true;\n    return articleStore.loadArticle(this.articleSlug, { acceptCached: true })\n      .then(action((article: any) => {\n        if (!article) throw new Error('Can\\'t load original article');\n        this.title = article.title;\n        this.description = article.description;\n        this.body = article.body;\n        this.tagList = article.tagList;\n      }))\n      .finally(action(() => { this.inProgress = false; }));\n  }\n\n  @action reset() {\n    this.title = '';\n    this.description = '';\n    this.body = '';\n    this.tagList = [];\n  }\n\n  @action setTitle(title: string) {\n    this.title = title;\n  }\n\n  @action setDescription(description: string) {\n    this.description = description;\n  }\n\n  @action setBody(body: string) {\n    this.body = body;\n  }\n\n  @action addTag(tag: string) {\n    if (this.tagList.includes(tag)) return;\n    this.tagList.push(tag);\n  }\n\n  @action removeTag(tag: string) {\n    this.tagList = this.tagList.filter(t => t !== tag);\n  }\n\n  @action submit() {\n    this.inProgress = true;\n    this.errors = undefined;\n    const article = {\n      title: this.title,\n      description: this.description,\n      body: this.body,\n      tagList: this.tagList,\n      slug: this.articleSlug,\n    };\n    return (this.articleSlug ? articleStore.updateArticle(article) : articleStore.createArticle(article))\n      .catch(action((err: any) => {\n        this.errors = err.response && err.response.body && err.response.body.errors; throw err;\n      }))\n      .finally(action(() => { this.inProgress = false; }));\n  }\n}\n\nexport default new EditorStore();\n","import { observable, action } from 'mobx';\nimport agent from '../agent';\n\nexport class ProfileStore {\n\n  @observable profile: any = undefined;\n  @observable isLoadingProfile = false;\n\n  @action loadProfile(username: string) {\n    this.isLoadingProfile = true;\n    agent.Profile.get(username)\n      .then(action(({ profile }: { profile: any }) => { this.profile = profile; }))\n      .finally(action(() => { this.isLoadingProfile = false; }))\n  }\n\n  @action follow() {\n    if (this.profile && !this.profile.following) {\n      this.profile.following = true;\n      agent.Profile.follow(this.profile.username)\n        .catch(action(() => { this.profile.following = false }));\n    }\n  }\n\n  @action unfollow() {\n    if (this.profile && this.profile.following) {\n      this.profile.following = false;\n      agent.Profile.unfollow(this.profile.username)\n        .catch(action(() => { this.profile.following = true }));\n    }\n  }\n}\n\nexport default new ProfileStore();\n","import articleStore, { ArticleStore } from './articleStore';\nimport commentStore, { CommentStore } from './commentStore';\nimport editorStore, { EditorStore } from './editorStore';\nimport commonStore, { CommonStore } from './commonStore';\nimport authStore, { AuthStore } from './authStore';\nimport userStore, { UserStore } from './userStore';\nimport profileStore, { ProfileStore } from './profileStore';\n\nexport type TRootStore = {\n  articleStore: ArticleStore;\n  commentStore: CommentStore;\n  editorStore: EditorStore;\n  authStore: AuthStore;\n  commonStore: CommonStore;\n  profileStore: ProfileStore;\n  userStore: UserStore;\n}\n\nconst rootStore = {\n  articleStore,\n  commentStore,\n  editorStore,\n  authStore,\n  commonStore,\n  profileStore,\n  userStore\n};\n\nexport default rootStore;","import React from 'react';\nimport { useLocalStore } from 'mobx-react-lite';\nimport rootStore, { TRootStore } from './stores'\n\nconst storeContext = React.createContext<TRootStore | null>(null);\n\nexport const StoreProvider = ({ children }: { children: React.ReactNode }) => {\n  const store = useLocalStore(() => rootStore);\n  return <storeContext.Provider value={store}>{children}</storeContext.Provider>;\n}\n\nexport const useStore = () => {\n  const store = React.useContext(storeContext);\n  if (!store) {\n    // this is especially useful in TypeScript so you don't need to be checking for null all the time\n    throw new Error('useStore must be used within a StoreProvider.');\n  }\n  return store;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useObserver } from 'mobx-react-lite';\nimport { useStore } from '../store'\n\nconst LoggedOutView = (props: any) => {\n  if (!props.currentUser) {\n    return (\n      <ul className=\"nav navbar-nav pull-xs-right\">\n\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"nav-link\">\n            Home\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to=\"/login\" className=\"nav-link\">\n            Sign in\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to=\"/register\" className=\"nav-link\">\n            Sign up\n          </Link>\n        </li>\n\n      </ul>\n    );\n  }\n  return null;\n};\n\nconst LoggedInView = (props: any) => {\n  if (props.currentUser) {\n    return (\n      <ul className=\"nav navbar-nav pull-xs-right\">\n\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"nav-link\">\n            Home\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to=\"/editor\" className=\"nav-link\">\n            <i className=\"ion-compose\" />&nbsp;New Post\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to=\"/settings\" className=\"nav-link\">\n            <i className=\"ion-gear-a\" />&nbsp;Settings\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link\n            to={`/@${props.currentUser.username}`}\n            className=\"nav-link\"\n          >\n            <img src={props.currentUser.image} className=\"user-pic\" alt=\"\" />\n            {props.currentUser.username}\n          </Link>\n        </li>\n\n      </ul>\n    );\n  }\n\n  return null;\n};\n\nconst Header: React.FC = () => {\n  const { commonStore, userStore } = useStore()\n  return useObserver(() => (\n    <nav className=\"navbar navbar-light\">\n      <div className=\"container\">\n\n        <Link to=\"/\" className=\"navbar-brand\">\n          {commonStore.appName.toLowerCase()}\n        </Link>\n\n        <LoggedOutView currentUser={userStore.currentUser} />\n\n        <LoggedInView currentUser={userStore.currentUser} />\n      </div>\n    </nav>\n  ));\n}\n\nexport default Header;\n","import React from 'react';\n\ntype Props = {\n  appName: string;\n  token: string | null;\n}\n\nconst Banner: React.FC<Props> = ({ appName, token }) => {\n  if (token) {\n    return null;\n  }\n  return (\n    <div className=\"banner\">\n      <div className=\"container\">\n        <h1 className=\"logo-font\">\n          {appName.toLowerCase()}\n        </h1>\n        <p>A place to share your knowledge.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useObserver } from 'mobx-react-lite';\nimport { useStore } from '../store';\n\nconst FAVORITED_CLASS = 'btn btn-sm btn-primary';\nconst NOT_FAVORITED_CLASS = 'btn btn-sm btn-outline-primary';\n\nconst ArticlePreview = (props) => {\n  const { articleStore } = useStore();\n\n  const handleClickFavorite = ev => {\n    ev.preventDefault();\n    const { article } = props;\n    if (article.favorited) {\n      articleStore.unmakeFavorite(article.slug);\n    } else {\n      articleStore.makeFavorite(article.slug);\n    }\n  };\n\n  return useObserver(() => {\n    const { article } = props;\n    const favoriteButtonClass = article.favorited ? FAVORITED_CLASS : NOT_FAVORITED_CLASS;\n\n    return (\n      <div className=\"article-preview\">\n        <div className=\"article-meta\">\n          <Link to={`/@${article.author.username}`}>\n            <img src={article.author.image} alt=\"\" />\n          </Link>\n\n          <div className=\"info\">\n            <Link className=\"author\" to={`/@${article.author.username}`}>\n              {article.author.username}\n            </Link>\n            <span className=\"date\">\n            {new Date(article.createdAt).toDateString()}\n          </span>\n          </div>\n\n          <div className=\"pull-xs-right\">\n            <button className={favoriteButtonClass} onClick={handleClickFavorite}>\n              <i className=\"ion-heart\" /> {article.favoritesCount}\n            </button>\n          </div>\n        </div>\n\n        <Link to={`/article/${article.slug}`} className=\"preview-link\">\n          <h1>{article.title}</h1>\n          <p>{article.description}</p>\n          <span>Read more...</span>\n          <ul className=\"tag-list\">\n            {\n              article.tagList.map(tag => {\n                return (\n                  <li className=\"tag-default tag-pill tag-outline\" key={tag}>\n                    {tag}\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </Link>\n      </div>\n    );\n  });\n};\n\n\nexport default ArticlePreview;","import React from 'react';\n\nconst ListPagination = props => {\n  if (props.totalPagesCount < 2) {\n    return null;\n  }\n\n  const range = [];\n  for (let i = 0; i < props.totalPagesCount; ++i) {\n    range.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n\n        {\n          range.map(v => {\n            const isCurrent = v === props.currentPage;\n            const onClick = ev => {\n              ev.preventDefault();\n              props.onSetPage(v);\n            };\n            return (\n              <li\n                className={ isCurrent ? 'page-item active' : 'page-item' }\n                onClick={onClick}\n                key={v.toString()}\n              >\n\n                <a className=\"page-link\" href=\"\">{v + 1}</a>\n\n              </li>\n            );\n          })\n        }\n\n      </ul>\n    </nav>\n  );\n};\n\nexport default ListPagination;\n","import React from 'react';\n\nconst style: any  = {\n  borderRadius: '50%',\n  width: '40px',\n  height: '40px',\n  margin: '90px auto',\n  position: 'relative',\n  borderTop: '3px solid rgba(0, 0, 0, 0.1)',\n  borderRight: '3px solid rgba(0, 0, 0, 0.1)',\n  borderBottom: '3px solid rgba(0, 0, 0, 0.1)',\n  borderLeft: '3px solid #818a91',\n  transform: 'translateZ(0)',\n  animation: 'loading-spinner 0.5s infinite linear',\n};\n\nconst LoadingSpinner: React.FC = () => (\n  <div className=\"loading-spinner\" style={style}>\n    <style>\n    {`\n    @keyframes loading-spinner {\n      0% { transform : rotate(0deg); }\n      100% { transform : rotate(360deg); }\n    }\n    `}\n    </style>\n  </div>\n);\n\nexport default LoadingSpinner;\n","import ArticlePreview from './ArticlePreview';\nimport ListPagination from './ListPagination';\nimport LoadingSpinner from './LoadingSpinner';\nimport React from 'react';\n\nconst ArticleList = props => {\n  if (props.loading && props.articles.length === 0) {\n    return (\n      <LoadingSpinner />\n    );\n  }\n\n  if (props.articles.length === 0) {\n    return (\n      <div className=\"article-preview\">\n        No articles are here... yet.\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {\n        props.articles.map(article => {\n          return (\n            <ArticlePreview article={article} key={article.slug} />\n          );\n        })\n      }\n\n      <ListPagination\n        onSetPage={props.onSetPage}\n        totalPagesCount={props.totalPagesCount}\n        currentPage={props.currentPage}\n      />\n    </div>\n  );\n};\n\nexport default ArticleList;\n","import React, { useCallback, useEffect } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { parse as qsParse } from \"query-string\";\nimport { useStore } from '../../store';\nimport ArticleList from \"../ArticleList\";\n\nconst YourFeedTab = (props: any) => {\n  if (props.currentUser) {\n    return (\n      <li className=\"nav-item\">\n        <NavLink\n          className=\"nav-link\"\n          isActive={(match, location) => {\n            return location.search.match(\"tab=feed\") ? true : false;\n          }}\n          to={{\n            pathname: \"/\",\n            search: \"?tab=feed\"\n          }}\n        >\n          Your Feed\n        </NavLink>\n      </li>\n    );\n  }\n  return null;\n};\n\nconst GlobalFeedTab = (props: any) => {\n  return (\n    <li className=\"nav-item\">\n      <NavLink\n        className=\"nav-link\"\n        isActive={(match, location) => {\n          return !location.search.match(/tab=(feed|tag)/) ? true : false;\n        }}\n        to={{\n          pathname: \"/\",\n          search: \"?tab=all\"\n        }}\n      >\n        Global Feed\n      </NavLink>\n    </li>\n  );\n};\n\nconst TagFilterTab = (props: any) => {\n  if (!props.tag) {\n    return null;\n  }\n\n  return (\n    <li className=\"nav-item\">\n      <a href=\"\" className=\"nav-link active\">\n        <i className=\"ion-pound\" /> {props.tag}\n      </a>\n    </li>\n  );\n};\n\nconst MainView: React.FC = () => {\n  const location = useLocation();\n  const { articleStore, userStore } = useStore();\n  \n  const tab = qsParse(location.search).tab || \"all\";\n  const tag = qsParse(location.search).tag || \"\";\n\n  const getPredicate = useCallback((tab, tag) => {\n    switch (tab) {\n      case \"feed\":\n        return { myFeed: true };\n      case \"tag\":\n        return { tag };\n      default:\n        return {};\n    }\n  }, []);\n\n  const handleSetPage = (page: number) => {\n    articleStore.setPage(page);\n    articleStore.loadArticles();\n  };\n  \n  useEffect(() => {\n    articleStore.setPredicate(getPredicate(tab, tag));\n    articleStore.loadArticles();\n  }, [articleStore, getPredicate, tab, tag]);\n\n\n  return useObserver(() => {\n    const { currentUser } = userStore;\n    const {\n      articles,\n      isLoading,\n      page,\n      totalPagesCount\n    } = articleStore;\n\n    return (\n      <div className=\"col-md-9\">\n        <div className=\"feed-toggle\">\n          <ul className=\"nav nav-pills outline-active\">\n            <YourFeedTab currentUser={currentUser} tab={tab} />\n\n            <GlobalFeedTab tab={tab} />\n\n            <TagFilterTab tag={tag} />\n          </ul>\n        </div>\n\n        <ArticleList\n          articles={articles}\n          loading={isLoading}\n          totalPagesCount={totalPagesCount}\n          currentPage={page}\n          onSetPage={handleSetPage}\n        />\n      </div>\n    );\n  });\n};\n\nexport default MainView;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\ntype Props = {\n  loading: boolean;\n  tags: string[];\n}\n\nconst Tags: React.FC<Props> = props => {\n  const { loading, tags } = props;\n  if (loading) {\n    return <LoadingSpinner />;\n  } else if (tags) {\n    return (\n      <div className=\"tag-list\">\n        {tags.map(tag => {\n          return (\n            <Link\n              to={{\n                pathname: \"/\",\n                search: \"?tab=tag&tag=\" + tag\n              }}\n              className=\"tag-default tag-pill\"\n              key={tag}\n            >\n              {tag}\n            </Link>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Tags;\n","import React, { useEffect } from 'react';\nimport { useObserver } from 'mobx-react-lite';\nimport { useStore } from '../../store';\nimport Banner from './Banner';\nimport MainView from './MainView'\nimport Tags from './Tags';\n\nconst Home: React.FC = () => {\n  const { commonStore } = useStore();\n  \n  useEffect(() => {\n    async function loadTags() {\n      await commonStore.loadTags();\n    }\n    loadTags();\n  }, [ commonStore ]);\n\n  return useObserver(() => {\n    const { appName, isLoadingTags, tags, token } = commonStore;\n    return (\n      <div className=\"home-page\">\n\n        <Banner token={token} appName={appName} />\n\n        <div className=\"container page\">\n          <div className=\"row\">\n\n            <MainView />\n\n            <div className=\"col-md-3\">\n              <div className=\"sidebar\">\n                <p>Popular Tags</p>\n\n                <Tags\n                  loading={isLoadingTags}\n                  tags={tags}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  });\n}\n\nexport default Home;","import React from 'react';\n\ntype Props = {\n  errors?: any[]\n}\n\nconst ListErrors: React.FC<Props> = props => {\n  const errors = props.errors;\n  if (errors) {\n    return (\n      <ul className=\"error-messages\">\n        {\n          Object.keys(errors).map((key: any) => {\n            return (\n              <li key={key}>\n                {key} {errors[key]}\n              </li>\n            );\n          })\n        }\n      </ul>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ListErrors;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useObserver } from 'mobx-react-lite';\nimport { useStore } from '../store';\nimport ListErrors from './ListErrors';\n\nconst Login: React.FC = (props: any) => {\n  const { authStore } = useStore();\n  const handleEmailChange = (e: any) => authStore.setEmail(e.target.value);\n  const handlePasswordChange = (e: any) => authStore.setPassword(e.target.value);\n  const handleSubmitForm = (e: any) => {\n    e.preventDefault();\n    authStore.login()\n      .then(() => props.history.replace('/'))\n      .catch(() => {});\n  };\n  useEffect(() => {\n    return () => authStore.reset();\n  }, [ authStore ]);\n\n  return useObserver(() => {\n    const { values, errors, inProgress } = authStore;\n    return (\n      <div className=\"auth-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\n              <h1 className=\"text-xs-center\">Sign In</h1>\n              <p className=\"text-xs-center\">\n                <Link to=\"register\">\n                  Need an account?\n                </Link>\n              </p>\n\n              <ListErrors errors={errors} />\n\n              <form onSubmit={handleSubmitForm}>\n                <fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      value={values.email}\n                      onChange={handleEmailChange}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={values.password}\n                      onChange={handlePasswordChange}\n                    />\n                  </fieldset>\n\n                  <button\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\n                    type=\"submit\"\n                    disabled={inProgress}\n                  >\n                    Sign in\n                  </button>\n\n                </fieldset>\n              </form>\n            </div>\n\n          </div>\n        </div>\n      </div>\n     )\n  });\n}\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useObserver } from 'mobx-react-lite';\nimport { useStore } from '../store';\nimport ListErrors from './ListErrors';\n\nconst Register: React.FC = (props: any) => {\n  const { authStore } = useStore()\n  const handleUsernameChange = (e: any) => authStore.setUsername(e.target.value);\n  const handleEmailChange = (e: any) => authStore.setEmail(e.target.value);\n  const handlePasswordChange = (e: any) => authStore.setPassword(e.target.value);\n  const handleSubmitForm = (e: any) => {\n    e.preventDefault();\n    authStore.register()\n      .then(() => props.history.replace('/'))\n      .catch(() => {});\n  };\n\n  return useObserver(() => {\n    const { values, errors, inProgress } = authStore;\n\n    return (\n      <div className=\"auth-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\n              <h1 className=\"text-xs-center\">Sign Up</h1>\n              <p className=\"text-xs-center\">\n                <Link to=\"login\">\n                  Have an account?\n                </Link>\n              </p>\n\n              <ListErrors errors={errors} />\n\n              <form onSubmit={handleSubmitForm}>\n                <fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      value={values.username}\n                      onChange={handleUsernameChange}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      value={values.email}\n                      onChange={handleEmailChange}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={values.password}\n                      onChange={handlePasswordChange}\n                    />\n                  </fieldset>\n\n                  <button\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\n                    type=\"submit\"\n                    disabled={inProgress}\n                  >\n                    Sign in\n                  </button>\n\n                </fieldset>\n              </form>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    );\n  });\n};\n\nexport default Register;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useObserver } from 'mobx-react-lite';\nimport { useStore } from '../store';\n\nconst PrivateRoute: React.FC<any> = (props: any) => {\n  const { userStore } = useStore();\n  return useObserver(() => {\n    if (userStore.currentUser) return <Route {...props} />;\n    return <Redirect to=\"/\" />;\n  });\n};\n\nexport default PrivateRoute;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { useStore } from \"../store\";\nimport ListErrors from \"./ListErrors\";\n\nconst SettingsForm: React.FC<any> = (props) => {\n  const { userStore } = useStore();\n  const [state, setState] = useState({\n    image: \"\",\n    username: \"\",\n    bio: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const updateState = (field: string) => (ev: any) => {\n    const newState = Object.assign({}, state, { [field]: ev.target.value });\n    setState(newState);\n  };\n\n  const submitForm = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    const user = Object.assign({}, state);\n    if (!user.password) {\n      delete user.password;\n    }\n\n    props.onSubmitForm(user);\n  };\n  \n  useEffect(() => {\n    if (userStore.currentUser) {\n      setState({\n        image: userStore.currentUser.image || \"\",\n        username: userStore.currentUser.username || \"\",\n        bio: userStore.currentUser.bio || \"\",\n        email: userStore.currentUser.email || \"\",\n        password: \"\"\n      });\n    }\n  }, [ userStore.currentUser ]);\n  \n  return useObserver(() => (\n    <form onSubmit={submitForm}>\n      <fieldset>\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"URL of profile picture\"\n            value={state.image}\n            onChange={updateState(\"image\")}\n          />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"text\"\n            placeholder=\"Username\"\n            value={state.username}\n            onChange={updateState(\"username\")}\n          />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <textarea\n            className=\"form-control form-control-lg\"\n            rows={8}\n            placeholder=\"Short bio about you\"\n            value={state.bio}\n            onChange={updateState(\"bio\")}\n          ></textarea>\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"email\"\n            placeholder=\"Email\"\n            value={state.email}\n            onChange={updateState(\"email\")}\n          />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"password\"\n            placeholder=\"New Password\"\n            value={state.password}\n            onChange={updateState(\"password\")}\n          />\n        </fieldset>\n\n        <button\n          className=\"btn btn-lg btn-primary pull-xs-right\"\n          type=\"submit\"\n          disabled={userStore.updatingUser}\n        >\n          Update Settings\n        </button>\n      </fieldset>\n    </form>\n  ));\n}\n\nconst Settings: React.FC = () => {\n  const history = useHistory();\n  const { authStore, userStore } = useStore();\n  const handleClickLogout = () =>\n    authStore.logout().then(() => history.replace(\"/\"));\n\n  return useObserver(() => (\n    <div className=\"settings-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Your Settings</h1>\n\n            <ListErrors errors={userStore.updatingUserErrors} />\n\n            <SettingsForm\n              currentUser={userStore.currentUser}\n              onSubmitForm={(user: any) => userStore.updateUser(user)}\n            />\n\n            <hr />\n\n            <button\n              className=\"btn btn-outline-danger\"\n              onClick={handleClickLogout}\n            >\n              Or click here to logout.\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  ));\n}\n\nexport default Settings;\n","import React from 'react';\n\nconst wrapperStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n};\n\nconst errorStyle  = {\n  display: 'inline-block',\n  margin: '20px auto',\n  borderRadius: '4px',\n  padding: '8px 15px',\n  color: 'rgb(240, 45, 45)',\n  // fontWeight: 'bold',\n  backgroundColor: 'rgba(240, 45, 45, 0.1)'\n};\n\ntype Props = {\n  message: string\n}\n\nconst RedError: React.FC<Props> = props => {\n  return (\n    <div style={wrapperStyle}>\n      <div style={errorStyle}>\n        {props.message}\n      </div>\n    </div>\n  );\n};\n\nexport default RedError;\n","import React, { useEffect, useMemo} from \"react\";\nimport { NavLink, Link, useLocation, useParams } from \"react-router-dom\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { useStore } from '../store';\nimport RedError from \"./RedError\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ArticleList from \"./ArticleList\";\n\nconst EditProfileSettings: React.FC<any> = props => {\n  if (props.isUser) {\n    return (\n      <Link\n        to=\"/settings\"\n        className=\"btn btn-sm btn-outline-secondary action-btn\"\n      >\n        <i className=\"ion-gear-a\" /> Edit Profile Settings\n      </Link>\n    );\n  }\n  return null;\n};\n\nconst FollowUserButton: React.FC<any> = props => {\n  if (props.isUser) {\n    return null;\n  }\n\n  let classes = \"btn btn-sm action-btn\";\n  if (props.following) {\n    classes += \" btn-secondary\";\n  } else {\n    classes += \" btn-outline-secondary\";\n  }\n\n  const handleClick = (ev: any) => {\n    ev.preventDefault();\n    if (props.following) {\n      props.unfollow(props.username);\n    } else {\n      props.follow(props.username);\n    }\n  };\n\n  return (\n    <button className={classes} onClick={handleClick}>\n      <i className=\"ion-plus-round\" />\n      &nbsp;\n      {props.following ? \"Unfollow\" : \"Follow\"} {props.username}\n    </button>\n  );\n};\n\nconst Tabs: React.FC<any> = props => {\n  const { profile } = props;\n  return (\n    <ul className=\"nav nav-pills outline-active\">\n      <li className=\"nav-item\">\n        <NavLink\n          className=\"nav-link\"\n          isActive={(match, location) => {\n            return location.pathname.match(\"/favorites\") ? false : true;\n          }}\n          to={`/@${profile.username}`}\n        >\n          My Articles\n        </NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to={`/@${profile.username}/favorites`}>\n          Favorited Articles\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst Profile: React.FC = () => {\n  const location = useLocation();\n  const params: any = useParams();\n  const { articleStore, profileStore, userStore } = useStore();\n\n  const handleFollow = () => profileStore.follow();\n  const handleUnfollow = () => profileStore.unfollow();\n\n  const handleSetPage = (page: number) => {\n    articleStore.setPage(page);\n    articleStore.loadArticles();\n  };\n  \n  const tab = /\\/favorites/.test(location.pathname) ? \"favorites\" : \"all\";\n  const predicate = useMemo(() => tab === \"favorites\" ? { favoritedBy: params.username } : { author: params.username }, [tab, params.username])\n\n  useEffect(() => {\n    profileStore.loadProfile(params.username);\n    articleStore.setPredicate(predicate);\n    articleStore.loadArticles();\n  }, [ articleStore, profileStore, predicate, location.pathname, params.username ]);\n\n  return useObserver(() => {\n    const { profile, isLoadingProfile } = profileStore;\n    const { currentUser } = userStore;\n\n    if (isLoadingProfile && !profile) return <LoadingSpinner />;\n    if (!profile) return <RedError message=\"Can't load profile\" />;\n\n    const isUser = currentUser && currentUser.username === profile.username;\n\n    return (\n      <div className=\"profile-page\">\n        <div className=\"user-info\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-xs-12 col-md-10 offset-md-1\">\n                <img src={profile.image} className=\"user-img\" alt=\"\" />\n                <h4>{profile.username}</h4>\n                <p>{profile.bio}</p>\n\n                <EditProfileSettings isUser={isUser} />\n                <FollowUserButton\n                  isUser={isUser}\n                  username={profile.username}\n                  following={profile.following}\n                  follow={handleFollow}\n                  unfollow={handleUnfollow}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-10 offset-md-1\">\n              <div className=\"articles-toggle\"><Tabs profile={profile} /></div>\n\n              <ArticleList\n                articles={articleStore.articles}\n                totalPagesCount={articleStore.totalPagesCount}\n                onSetPage={handleSetPage}\n                loading={articleStore.isLoading}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  });\n}\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticleActions: React.FC<any> = props => {\n  const article = props.article;\n  const handleDelete = () => props.onDelete(article.slug);\n\n  if (props.canModify) {\n    return (\n      <span>\n\n        <Link\n          to={`/editor/${article.slug}`}\n          className=\"btn btn-outline-secondary btn-sm\"\n        >\n          <i className=\"ion-edit\" /> Edit Article\n        </Link>\n\n        <button className=\"btn btn-outline-danger btn-sm\" onClick={handleDelete}>\n          <i className=\"ion-trash-a\" /> Delete Article\n        </button>\n\n      </span>\n    );\n  }\n\n  return (\n    <span />\n  );\n};\n\nexport default ArticleActions;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport ArticleActions from './ArticleActions';\n\n\nconst ArticleMeta = observer((props: any) => {\n  const article = props.article;\n  return (\n    <div className=\"article-meta\">\n      <Link to={`/@${article.author.username}`}>\n        <img src={article.author.image} alt=\"\" />\n      </Link>\n\n      <div className=\"info\">\n        <Link to={`/@${article.author.username}`} className=\"author\">\n          {article.author.username}\n        </Link>\n        <span className=\"date\">\n          {new Date(article.createdAt).toDateString()}\n        </span>\n      </div>\n\n      <ArticleActions canModify={props.canModify} article={article} onDelete={props.onDelete} />\n    </div>\n  );\n});\n\nexport default ArticleMeta;\n","import React, { useState } from 'react';\nimport { useObserver } from 'mobx-react-lite';\nimport { useStore } from '../../store';\n\nconst CommentInput: React.FC<any> = props => {\n  const [body, set] = useState<string>('');\n  const { commentStore } = useStore();\n\n  const handleBodyChange = (ev: any) => {\n    set(ev.target.value);\n  };\n\n  const createComment = (ev: any) => {\n    ev.preventDefault();\n    commentStore.createComment({ body })\n      .then(() => set(''));\n  };\n\n  return useObserver(() => {\n    const { isCreatingComment } = commentStore;\n    return (\n      <form className=\"card comment-form\" onSubmit={createComment}>\n        <div className=\"card-block\">\n          <textarea className=\"form-control\"\n            placeholder=\"Write a comment...\"\n            value={body}\n            disabled={isCreatingComment}\n            onChange={handleBodyChange}\n            rows={3}\n          />\n        </div>\n        <div className=\"card-footer\">\n          <img\n            src={props.currentUser.image}\n            className=\"comment-author-img\"\n            alt=\"\"\n          />\n          <button\n            className=\"btn btn-sm btn-primary\"\n            type=\"submit\"\n          >\n            Post Comment\n          </button>\n        </div>\n      </form>\n    );\n  });\n};\n\nexport default CommentInput;\n","import React from 'react';\n\nconst DeleteButton: React.FC<any> = props => {\n  const handleClick = () => props.onDelete(props.commentId);\n\n  if (props.show) {\n    return (\n      <span className=\"mod-options\">\n        <i className=\"ion-trash-a\" onClick={handleClick} />\n      </span>\n    );\n  }\n  return null;\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport DeleteButton from './DeleteButton';\n\nconst Comment: React.FC<any> = props => {\n  const comment = props.comment;\n  const show = props.currentUser &&\n    props.currentUser.username === comment.author.username;\n  return (\n    <div className=\"card\">\n      <div className=\"card-block\">\n        <p className=\"card-text\">{comment.body}</p>\n      </div>\n      <div className=\"card-footer\">\n        <Link\n          to={`/@${comment.author.username}`}\n          className=\"comment-author\"\n        >\n          <img src={comment.author.image} className=\"comment-author-img\" alt=\"\" />\n        </Link>\n        &nbsp;\n        <Link\n          to={`/@${comment.author.username}`}\n          className=\"comment-author\"\n        >\n          {comment.author.username}\n        </Link>\n        <span className=\"date-posted\">\n          {new Date(comment.createdAt).toDateString()}\n        </span>\n        <DeleteButton\n          show={show}\n          slug={props.slug}\n          commentId={comment.id}\n          onDelete={props.onDelete}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Comment from './Comment';\n\nconst CommentList = observer((props: any) => {\n  return (\n    <div>\n      {\n        props.comments.map((comment: any) => {\n          return (\n            <Comment\n              comment={comment}\n              currentUser={props.currentUser}\n              slug={props.slug}\n              key={comment.id}\n              onDelete={props.onDelete}\n            />\n          );\n        })\n      }\n    </div>\n  );\n});\n\nexport default CommentList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CommentInput from './CommentInput';\nimport CommentList from './CommentList';\nimport ListErrors from '../ListErrors';\n\nconst CommentContainer: React.FC<any> = props => {\n  if (props.currentUser) {\n    return (\n      <div className=\"col-xs-12 col-md-8 offset-md-2\">\n        <div>\n          <ListErrors errors={props.errors} />\n          <CommentInput slug={props.slug} currentUser={props.currentUser} />\n        </div>\n\n        <CommentList\n          comments={props.comments}\n          slug={props.slug}\n          currentUser={props.currentUser}\n          onDelete={props.onDelete}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"col-xs-12 col-md-8 offset-md-2\">\n        <p>\n          <Link to=\"/login\">Sign in</Link>\n          &nbsp;or&nbsp;\n          <Link to=\"/register\">sign up</Link>\n          &nbsp;to add comments on this article.\n        </p>\n\n        <CommentList\n          comments={props.comments}\n          slug={props.slug}\n          currentUser={props.currentUser}\n          onDelete={props.onDelete}\n        />\n      </div>\n    );\n  }\n};\n\nexport default CommentContainer;\n","import React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useObserver } from \"mobx-react-lite\";\nimport marked from \"marked\";\n\nimport { useStore } from '../../store';\nimport RedError from \"../RedError\";\nimport ArticleMeta from \"./ArticleMeta\";\nimport CommentContainer from \"./CommentContainer\";\n\nconst Article: React.FC = () => {\n  const history = useHistory();\n  const { slug } = useParams();\n  const { articleStore, commentStore, userStore } = useStore();\n  useEffect(() => {\n    if (slug) {\n      articleStore.loadArticle(slug, { acceptCached: true });\n      commentStore.setArticleSlug(slug);\n      commentStore.loadComments();\n    }\n  }, [ articleStore, commentStore, slug ]);\n\n  const handleDeleteArticle = (slug: string) => {\n    articleStore\n      .deleteArticle(slug)\n      .then(() => history.replace(\"/\"));\n  };\n\n  const handleDeleteComment = (id: number) => {\n    commentStore.deleteComment(id);\n  };\n\n  return useObserver(() => {\n    const { currentUser } = userStore;\n    const { comments, commentErrors } = commentStore;\n    const article = articleStore.getArticle(slug || '');\n\n    if (!article) return <RedError message=\"Can't load article\" />;\n\n    const markup = { __html: marked(article.body, { sanitize: true }) };\n    const canModify =\n      currentUser && currentUser.username === article.author.username;\n    return (\n      <div className=\"article-page\">\n        <div className=\"banner\">\n          <div className=\"container\">\n            <h1>{article.title}</h1>\n            <ArticleMeta\n              article={article}\n              canModify={canModify}\n              onDelete={handleDeleteArticle}\n            />\n          </div>\n        </div>\n\n        <div className=\"container page\">\n          <div className=\"row article-content\">\n            <div className=\"col-xs-12\">\n              <div dangerouslySetInnerHTML={markup} />\n\n              <ul className=\"tag-list\">\n                {article.tagList.map((tag: string) => {\n                  return (\n                    <li className=\"tag-default tag-pill tag-outline\" key={tag}>\n                      {tag}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n\n          <hr />\n\n          <div className=\"article-actions\" />\n\n          <div className=\"row\">\n            {<CommentContainer\n              comments={comments}\n              errors={commentErrors}\n              slug={slug}\n              currentUser={currentUser}\n              onDelete={handleDeleteComment}\n            />}\n          </div>\n        </div>\n      </div>\n    );\n  });\n};\n\nexport default Article;","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { useStore } from \"../store\";\nimport ListErrors from \"./ListErrors\";\n\nconst Editor: React.FC = () => {\n  const history = useHistory();\n  const { slug } = useParams();\n  const [tagInput, set] = useState<string>('');\n  const { editorStore } = useStore();\n\n  useEffect(() => {\n    if (slug) {\n      editorStore.setArticleSlug(slug);\n      editorStore.loadInitialData();\n    }\n  }, [ editorStore, slug ]);\n\n  const changeTitle = (e: any) => editorStore.setTitle(e.target.value);\n  const changeDescription = (e: any) =>\n    editorStore.setDescription(e.target.value);\n  const changeBody = (e: any) => editorStore.setBody(e.target.value);\n  const changeTagInput = (e: any) => set(e.target.value);\n\n  const handleTagInputKeyDown = (ev: any) => {\n    switch (ev.keyCode) {\n      case 13: // Enter\n      case 9: // Tab\n      case 188: // ,\n        if (ev.keyCode !== 9) ev.preventDefault();\n        handleAddTag();\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleAddTag = () => {\n    if (tagInput) {\n      editorStore.addTag(tagInput.trim());\n      set('');\n    }\n  };\n\n  const handleRemoveTag = (tag: string) => {\n    if (editorStore.inProgress) return;\n    editorStore.removeTag(tag);\n  };\n\n  const submitForm = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n    editorStore.submit().then((article: any) => {\n      editorStore.reset();\n      history.replace(`/article/${article.slug}`);\n    });\n  };\n\n  return useObserver(() => {\n    const {\n      inProgress,\n      errors,\n      title,\n      description,\n      body,\n      tagList\n    } = editorStore;\n\n    return (\n      <div className=\"editor-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-10 offset-md-1 col-xs-12\">\n              <ListErrors errors={errors} />\n\n              <form onSubmit={submitForm}>\n                <fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"text\"\n                      placeholder=\"Article Title\"\n                      value={title}\n                      onChange={changeTitle}\n                      disabled={inProgress}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"What's this article about?\"\n                      value={description}\n                      onChange={changeDescription}\n                      disabled={inProgress}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <textarea\n                      className=\"form-control\"\n                      rows={8}\n                      placeholder=\"Write your article (in markdown)\"\n                      value={body}\n                      onChange={changeBody}\n                      disabled={inProgress}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Enter tags\"\n                      value={tagInput}\n                      onChange={changeTagInput}\n                      onBlur={handleAddTag}\n                      onKeyDown={handleTagInputKeyDown}\n                      disabled={inProgress}\n                    />\n\n                    <div className=\"tag-list\">\n                      {tagList.map(tag => {\n                        return (\n                          <span className=\"tag-default tag-pill\" key={tag}>\n                            <i\n                              className=\"ion-close-round\"\n                              onClick={() => handleRemoveTag(tag)}\n                            />\n                            {tag}\n                          </span>\n                        );\n                      })}\n                    </div>\n                  </fieldset>\n\n                  <button\n                    className=\"btn btn-lg pull-xs-right btn-primary\"\n                    type=\"submit\"\n                    disabled={inProgress}\n                  >\n                    Publish Article\n                  </button>\n                </fieldset>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  });\n};\n\nexport default Editor;","import React, { useEffect } from 'react';\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom';\nimport { useStore } from './store'\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport PrivateRoute from './components/PrivateRoute';\nimport Settings from './components/Settings';\nimport Profile from './components/Profile';\nimport Article from './components/Article';\nimport Editor from './components/Editor';\n\nconst App: React.FC = () => {\n  const { commonStore, userStore } = useStore()\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.pullUser()\n        .finally(() => commonStore.setAppLoaded())\n    }\n  })\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <PrivateRoute path=\"/settings\" component={Settings} />\n        <Route path=\"/@:username\" component={Profile} />\n        <Route path=\"/@:username/favorites\" component={Profile} />\n        <Route path=\"/article/:slug\" component={Article} />\n        <Route path=\"/editor/:slug?\" component={Editor} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport { StoreProvider } from './store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}