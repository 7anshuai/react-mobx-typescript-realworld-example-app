{"version":3,"sources":["stores/userStore.ts","stores/authStore.ts","agent.ts","stores/articleStore.ts","stores/commentStore.ts","stores/editorStore.ts","stores/profileStore.ts","stores/index.ts","store.tsx","components/Header.tsx","components/Home/Banner.tsx","components/ArticlePreview.tsx","components/ListPagination.tsx","components/LoadingSpinner.tsx","components/ArticleList.tsx","components/Home/MainView.tsx","components/Home/Tags.tsx","components/Home/index.tsx","components/ListErrors.tsx","components/Login.tsx","components/Register.tsx","components/PrivateRoute.tsx","components/Settings.tsx","components/RedError.tsx","components/Profile.tsx","components/Article/ArticleActions.tsx","components/Article/ArticleMeta.tsx","components/Article/CommentInput.tsx","components/Article/DeleteButton.tsx","components/Article/Comment.tsx","components/Article/CommentList.tsx","components/Article/CommentContainer.tsx","components/Article/index.tsx","components/Editor.tsx","App.tsx","serviceWorker.ts","index.tsx","stores/commonStore.ts"],"names":["UserStore","currentUser","loadingUser","updatingUser","updatingUserErrors","makeObservable","this","observable","pullUser","action","updateUser","forgetUser","agent","Auth","current","then","user","finally","newUser","save","undefined","AuthStore","inProgress","errors","values","username","email","password","setUsername","setEmail","setPassword","reset","login","register","logout","commonStore","setToken","token","userStore","catch","err","response","body","Promise","resolve","superagent","superagentPromise","_superagent","global","API_ROOT","encode","encodeURIComponent","handleErrors","status","authStore","responseBody","res","tokenPlugin","req","set","requests","url","del","use","end","get","put","post","Tags","getAll","limit","count","p","omitSlug","article","Object","assign","slug","Articles","all","page","lim","byAuthor","author","query","byTag","tag","favorite","favoritedBy","_limit","feed","unfavorite","update","create","Comments","comment","delete","commentId","forArticle","Profile","follow","unfollow","isLoading","totalPagesCount","articlesRegistry","map","predicate","articles","computed","setPage","setPredicate","loadArticles","loadArticle","makeFavorite","unmakeFavorite","createArticle","updateArticle","deleteArticle","clear","JSON","stringify","myFeed","$req","articlesCount","forEach","Math","ceil","acceptCached","getArticle","favorited","favoritesCount","data","ret","value","push","isCreatingComment","isLoadingComments","commentErrors","articleSlug","comments","setArticleSlug","loadComments","createComment","deleteComment","id","idx","findIndex","c","splice","title","description","tagList","loadInitialData","setTitle","setDescription","setBody","addTag","removeTag","submit","articleStore","Error","includes","filter","t","profile","isLoadingProfile","loadProfile","following","rootStore","commentStore","editorStore","profileStore","storeContext","React","createContext","useStore","store","useContext","LoggedOutView","props","className","to","LoggedInView","src","image","alt","Header","appName","toLowerCase","Banner","ArticlePreview","handleClickFavorite","ev","preventDefault","favoriteButtonClass","Date","createdAt","toDateString","onClick","key","ListPagination","range","i","v","isCurrent","currentPage","onSetPage","toString","href","style","borderRadius","width","height","margin","position","borderTop","borderRight","borderBottom","borderLeft","transform","animation","LoadingSpinner","ArticleList","loading","length","YourFeedTab","isActive","match","location","search","pathname","GlobalFeedTab","TagFilterTab","MainView","useLocation","tab","qsParse","getPredicate","useCallback","handleSetPage","useEffect","tags","Home","a","async","loadTags","isLoadingTags","ListErrors","keys","Login","handleEmailChange","e","target","handlePasswordChange","handleSubmitForm","history","replace","onSubmit","type","placeholder","onChange","disabled","Register","handleUsernameChange","PrivateRoute","SettingsForm","useState","bio","state","setState","updateState","field","newState","submitForm","onSubmitForm","rows","Settings","useHistory","handleClickLogout","wrapperStyle","display","justifyContent","errorStyle","padding","color","fontStyle","backgroundColor","RedError","message","EditProfileSettings","isUser","FollowUserButton","classes","Tabs","params","useParams","handleFollow","handleUnfollow","test","useMemo","ArticleActions","canModify","onDelete","ArticleMeta","observer","CommentInput","handleBodyChange","DeleteButton","show","Comment","CommentList","CommentContainer","Article","handleDeleteArticle","handleDeleteComment","markup","__html","marked","sanitize","dangerouslySetInnerHTML","Editor","tagInput","changeTitle","changeDescription","changeBody","changeTagInput","handleTagInputKeyDown","keyCode","handleAddTag","trim","onBlur","onKeyDown","handleRemoveTag","App","setAppLoaded","path","component","Boolean","window","hostname","ReactDOM","render","children","useLocalObservable","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","CommonStore","localStorage","getItem","appLoaded","reaction","setItem","removeItem"],"mappings":"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","file":"static/js/main.c158698b.chunk.js","sourcesContent":["import { observable, action, makeObservable } from 'mobx';\nimport agent from '../agent';\n\nexport type User = {\n  id: number;\n  email: string;\n  bio: string;\n  image: string;\n  token: string;\n  username: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport class UserStore {\n  currentUser?: User;\n  loadingUser?: boolean;\n  updatingUser?: boolean;\n  updatingUserErrors: any;\n\n  constructor() {\n    makeObservable(this, {\n      currentUser: observable,\n      loadingUser: observable,\n      updatingUser: observable,\n      updatingUserErrors: observable,\n      pullUser: action,\n      updateUser: action,\n      forgetUser: action\n    });\n  }\n\n  pullUser() {\n    this.loadingUser = true;\n    return agent.Auth.current()\n      .then(action(({ user }: { user: User }) => { this.currentUser = user; }))\n      .finally(action(() => { this.loadingUser = false; }))\n  }\n\n  updateUser(newUser: User) {\n    this.updatingUser = true;\n    return agent.Auth.save(newUser)\n      .then(action(({ user }: { user: User }) => { this.currentUser = user; }))\n      .finally(action(() => { this.updatingUser = false; }))\n  }\n\n  forgetUser() {\n    this.currentUser = undefined;\n  }\n}\n\nexport default new UserStore();\n","import { observable, action, makeObservable } from 'mobx';\nimport { ResponseError } from 'superagent';\nimport agent from '../agent';\nimport userStore, { User } from './userStore';\nimport commonStore from './commonStore';\n\nexport class AuthStore {\n  inProgress = false;\n  errors = undefined;\n\n  values = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  constructor() {\n    makeObservable(this, {\n      inProgress: observable,\n      errors: observable,\n      values: observable,\n      setUsername: action,\n      setEmail: action,\n      setPassword: action,\n      reset: action,\n      login: action,\n      register: action,\n      logout: action\n    });\n  }\n\n  setUsername(username: string) {\n    this.values.username = username;\n  }\n\n  setEmail(email: string) {\n    this.values.email = email;\n  }\n\n  setPassword(password: string) {\n    this.values.password = password;\n  }\n\n  reset() {\n    this.values.username = '';\n    this.values.email = '';\n    this.values.password = '';\n  }\n\n  login() {\n    this.inProgress = true;\n    this.errors = undefined;\n    return agent.Auth.login(this.values.email, this.values.password)\n      .then(({ user }: { user: User }) => commonStore.setToken(user.token))\n      .then(() => userStore.pullUser())\n      .catch(action((err: ResponseError) => {\n        this.errors = err.response && err.response.body && err.response.body.errors;\n        throw err;\n      }))\n      .finally(action(() => { this.inProgress = false; }));\n  }\n\n  register() {\n    this.inProgress = true;\n    this.errors = undefined;\n    return agent.Auth.register(this.values.username, this.values.email, this.values.password)\n      .then(({ user }: { user: User }) => commonStore.setToken(user.token))\n      .then(() => userStore.pullUser())\n      .catch(action((err: ResponseError) => {\n        this.errors = err.response && err.response.body && err.response.body.errors;\n        throw err;\n      }))\n      .finally(action(() => { this.inProgress = false; }));\n  }\n\n  logout() {\n    commonStore.setToken(null);\n    userStore.forgetUser();\n    return Promise.resolve();\n  }\n}\n\nexport default new AuthStore();\n","import superagentPromise from 'superagent-promise';\nimport _superagent, { ResponseError, Request, Response } from 'superagent';\nimport commonStore from './stores/commonStore';\nimport authStore from './stores/authStore';\n\nconst superagent = superagentPromise(_superagent, global.Promise);\n\nconst API_ROOT = 'https://conduit.productionready.io/api';\n\nconst encode = encodeURIComponent;\n\nconst handleErrors = (err: ResponseError) => {\n  if (err && err.response && err.response.status === 401) {\n    authStore.logout();\n  }\n  return err;\n};\n\nconst responseBody = (res: Response) => res.body;\n\nconst tokenPlugin = (req: Request) => {\n  if (commonStore.token) {\n    req.set('authorization', `Token ${commonStore.token}`);\n  }\n};\n\nconst requests = {\n  del: (url: string) =>\n    superagent\n      .del(`${API_ROOT}${url}`)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n  get: (url: string) =>\n    superagent\n      .get(`${API_ROOT}${url}`)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n  put: (url: string, body: any) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n  post: (url: string, body: any) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n};\n\nconst Auth = {\n  current: () =>\n    requests.get('/user'),\n  login: (email: string, password: string) =>\n    requests.post('/users/login', { user: { email, password } }),\n  register: (username: string, email: string, password: string) =>\n    requests.post('/users', { user: { username, email, password } }),\n  save: (user: any) =>\n    requests.put('/user', { user })\n};\n\nconst Tags = {\n  getAll: () => requests.get('/tags')\n};\n\nconst limit = (count: any, p: any) => `limit=${count}&offset=${p ? p * count : 0}`;\nconst omitSlug = (article: any) => Object.assign({}, article, { slug: undefined })\n\nconst Articles = {\n  all: (page: any, lim = 10, predicate: string) =>\n    requests.get(`/articles?${limit(lim, page)}`),\n  byAuthor: (author: string, page: number, query: any) =>\n    requests.get(`/articles?author=${encode(author)}&${limit(5, page)}`),\n  byTag: (tag: string, page: number, lim = 10) =>\n    requests.get(`/articles?tag=${encode(tag)}&${limit(lim, page)}`),\n  del: (slug: string) =>\n    requests.del(`/articles/${slug}`),\n  favorite: (slug: string) =>\n    requests.post(`/articles/${slug}/favorite`, {}),\n  favoritedBy: (author: string, page: number, _limit: number) =>\n    requests.get(`/articles?favorited=${encode(author)}&${limit(5, page)}`),\n  feed: (page: number, limit: number) =>\n    requests.get(`/articles/feed?limit=${limit}&offset=${page}`),\n  get: (slug: string) =>\n    requests.get(`/articles/${slug}`),\n  unfavorite: (slug: string) =>\n    requests.del(`/articles/${slug}/favorite`),\n  update: (article: any) =>\n    requests.put(`/articles/${article.slug}`, { article: omitSlug(article) }),\n  create: (article: any) =>\n    requests.post('/articles', { article })\n};\n\nconst Comments = {\n  create: (slug: string, comment: any) =>\n    requests.post(`/articles/${slug}/comments`, { comment }),\n  delete: (slug: string, commentId: number) =>\n    requests.del(`/articles/${slug}/comments/${commentId}`),\n  forArticle: (slug: string) =>\n    requests.get(`/articles/${slug}/comments`)\n};\n\nconst Profile = {\n  follow: (username: string) =>\n    requests.post(`/profiles/${username}/follow`, {}),\n  get: (username: string) =>\n    requests.get(`/profiles/${username}`),\n  unfollow: (username: string) =>\n    requests.del(`/profiles/${username}/follow`)\n};\n\nexport default {\n  Articles,\n  Auth,\n  Comments,\n  Profile,\n  Tags,\n};\n","import { observable, action, computed, makeObservable } from 'mobx';\nimport { ResponseError } from \"superagent\";\nimport agent from '../agent';\n\nconst LIMIT = 10;\n\nexport class ArticleStore {\n  isLoading = false;\n  page = 0;\n  totalPagesCount = 0;\n  articlesRegistry = observable.map();\n  predicate: any = {};\n\n  constructor() {\n    makeObservable(this, {\n      isLoading: observable,\n      page: observable,\n      totalPagesCount: observable,\n      articlesRegistry: observable,\n      predicate: observable,\n      articles: computed,\n      setPage: action,\n      setPredicate: action,\n      loadArticles: action,\n      loadArticle: action,\n      makeFavorite: action,\n      unmakeFavorite: action,\n      createArticle: action,\n      updateArticle: action,\n      deleteArticle: action\n    });\n  }\n\n  get articles() {\n    const ret = []\n    const values = this.articlesRegistry.values();\n    for (let value of values) {\n      ret.push(value);\n    }\n    return ret;\n  }\n\n  clear() {\n    this.articlesRegistry.clear();\n    this.page = 0;\n  }\n\n  getArticle(slug: string) {\n    return this.articlesRegistry.get(slug);\n  }\n\n  setPage(page: number) {\n    this.page = page;\n  }\n\n  setPredicate(predicate: any) {\n    if (JSON.stringify(predicate) === JSON.stringify(this.predicate)) return;\n    this.clear();\n    this.predicate = predicate;\n  }\n\n  $req() {\n    if (this.predicate.myFeed) return agent.Articles.feed(this.page, LIMIT);\n    if (this.predicate.favoritedBy) return agent.Articles.favoritedBy(this.predicate.favoritedBy, this.page, LIMIT);\n    if (this.predicate.tag) return agent.Articles.byTag(this.predicate.tag, this.page, LIMIT);\n    if (this.predicate.author) return agent.Articles.byAuthor(this.predicate.author, this.page, LIMIT);\n    return agent.Articles.all(this.page, LIMIT, this.predicate);\n  }\n\n  loadArticles() {\n    this.isLoading = true;\n    return this.$req()\n      .then(action(({ articles, articlesCount }: { articles: any, articlesCount: number }) => {\n        this.articlesRegistry.clear();\n        articles.forEach((article: any) => this.articlesRegistry.set(article.slug, article));\n        this.totalPagesCount = Math.ceil(articlesCount / LIMIT);\n      }))\n      .finally(action(() => { this.isLoading = false; }));\n  }\n\n  loadArticle(slug: string, { acceptCached = false } = {}) {\n    if (acceptCached) {\n      const article = this.getArticle(slug);\n      if (article) return Promise.resolve(article);\n    }\n    this.isLoading = true;\n    return agent.Articles.get(slug)\n      .then(action(({ article }: { article: any}) => {\n        this.articlesRegistry.set(article.slug, article);\n        return article;\n      }))\n      .finally(action(() => { this.isLoading = false; }));\n  }\n\n  makeFavorite(slug: string) {\n    const article = this.getArticle(slug);\n    if (article && !article.favorited) {\n      article.favorited = true;\n      article.favoritesCount++;\n      return agent.Articles.favorite(slug)\n        .catch(action((err: ResponseError) => {\n          article.favorited = false;\n          article.favoritesCount--;\n          throw err;\n        }));\n    }\n    return Promise.resolve();\n  }\n\n  unmakeFavorite(slug: string) {\n    const article = this.getArticle(slug);\n    if (article && article.favorited) {\n      article.favorited = false;\n      article.favoritesCount--;\n      return agent.Articles.unfavorite(slug)\n        .catch(action((err: ResponseError) => {\n          article.favorited = true;\n          article.favoritesCount++;\n          throw err;\n        }));\n    }\n    return Promise.resolve();\n  }\n\n  createArticle(article: any) {\n    return agent.Articles.create(article)\n      .then(({ article }: { article:any }) => {\n        this.articlesRegistry.set(article.slug, article);\n        return article;\n      })\n  }\n\n  updateArticle(data: any) {\n    return agent.Articles.update(data)\n      .then(({ article }:{ article: any }) => {\n        this.articlesRegistry.set(article.slug, article);\n        return article;\n      })\n  }\n\n  deleteArticle(slug: string) {\n    this.articlesRegistry.delete(slug);\n    return agent.Articles.del(slug)\n      .catch(action((err: ResponseError) => { this.loadArticles(); throw err; }));\n  }\n}\n\nexport default new ArticleStore();\n","import { observable, action, makeObservable } from 'mobx';\nimport { ResponseError } from 'superagent';\nimport agent from '../agent';\n\nexport class CommentStore {\n  isCreatingComment = false;\n  isLoadingComments = false;\n  commentErrors = undefined;\n  articleSlug: string = '';\n  comments: any[] = [];\n\n  constructor() {\n    makeObservable(this, {\n      isCreatingComment: observable,\n      isLoadingComments: observable,\n      commentErrors: observable,\n      articleSlug: observable,\n      comments: observable,\n      setArticleSlug: action,\n      loadComments: action,\n      createComment: action,\n      deleteComment: action\n    });\n  }\n\n  setArticleSlug(articleSlug: string) {\n    if (this.articleSlug !== articleSlug) {\n      this.comments = [];\n      this.articleSlug = articleSlug;\n    }\n  }\n\n  loadComments() {\n    this.isLoadingComments = true;\n    this.commentErrors = undefined;\n    return agent.Comments.forArticle(this.articleSlug)\n      .then(action(({ comments }: { comments: any[] }) => { this.comments = comments; }))\n      .catch(action((err: ResponseError) => {\n        this.commentErrors = err.response && err.response.body && err.response.body.errors;\n        throw err;\n      }))\n      .finally(action(() => { this.isLoadingComments = false; }));\n  }\n\n\n  createComment(comment: any) {\n    this.isCreatingComment = true;\n    return agent.Comments.create(this.articleSlug, comment)\n      .then(() => this.loadComments())\n      .finally(action(() => { this.isCreatingComment = false; }));\n  }\n\n  deleteComment(id: number) {\n    const idx = this.comments.findIndex(c => c.id === id);\n    if (idx > -1) this.comments.splice(idx, 1);\n    return agent.Comments.delete(this.articleSlug, id)\n      .catch(action((err: ResponseError) => { this.loadComments(); throw err }));\n  }\n}\n\nexport default new CommentStore();\n","import { observable, action, makeObservable } from 'mobx';\nimport { ResponseError } from 'superagent';\nimport articleStore from './articleStore';\n\nexport class EditorStore {\n  inProgress = false;\n  errors = undefined;\n  articleSlug: string = '';\n\n  title = '';\n  description = '';\n  body = '';\n  tagList: string[] = [];\n\n  constructor() {\n    makeObservable(this, {\n      inProgress: observable,\n      errors: observable,\n      articleSlug: observable,\n      title: observable,\n      description: observable,\n      body: observable,\n      tagList: observable,\n      setArticleSlug: action,\n      loadInitialData: action,\n      reset: action,\n      setTitle: action,\n      setDescription: action,\n      setBody: action,\n      addTag: action,\n      removeTag: action,\n      submit: action\n    });\n  }\n\n  setArticleSlug(articleSlug: string) {\n    if (this.articleSlug !== articleSlug) {\n      this.reset();\n      this.articleSlug = articleSlug;\n    }\n  }\n\n  loadInitialData() {\n    if (!this.articleSlug) return Promise.resolve();\n    this.inProgress = true;\n    return articleStore.loadArticle(this.articleSlug, { acceptCached: true })\n      .then(action((article: any) => {\n        if (!article) throw new Error('Can\\'t load original article');\n        this.title = article.title;\n        this.description = article.description;\n        this.body = article.body;\n        this.tagList = article.tagList;\n      }))\n      .finally(action(() => { this.inProgress = false; }));\n  }\n\n  reset() {\n    this.title = '';\n    this.description = '';\n    this.body = '';\n    this.tagList = [];\n  }\n\n  setTitle(title: string) {\n    this.title = title;\n  }\n\n  setDescription(description: string) {\n    this.description = description;\n  }\n\n  setBody(body: string) {\n    this.body = body;\n  }\n\n  addTag(tag: string) {\n    if (this.tagList.includes(tag)) return;\n    this.tagList.push(tag);\n  }\n\n  removeTag(tag: string) {\n    this.tagList = this.tagList.filter(t => t !== tag);\n  }\n\n  submit() {\n    this.inProgress = true;\n    this.errors = undefined;\n    const article = {\n      title: this.title,\n      description: this.description,\n      body: this.body,\n      tagList: this.tagList,\n      slug: this.articleSlug,\n    };\n    return (this.articleSlug ? articleStore.updateArticle(article) : articleStore.createArticle(article))\n      .catch(action((err: ResponseError) => {\n        this.errors = err.response && err.response.body && err.response.body.errors; throw err;\n      }))\n      .finally(action(() => { this.inProgress = false; }));\n  }\n}\n\nexport default new EditorStore();\n","import { observable, action, makeObservable } from 'mobx';\nimport agent from '../agent';\n\ntype Profile = {\n  username: string;\n  bio: string;\n  image: string;\n  following: boolean;\n}\n\nexport class ProfileStore {\n  profile?: Profile;\n  isLoadingProfile = false;\n\n  constructor() {\n    makeObservable(this, {\n      profile: observable,\n      isLoadingProfile: observable,\n      loadProfile: action,\n      follow: action,\n      unfollow: action\n    });\n  }\n\n  loadProfile(username: string) {\n    this.isLoadingProfile = true;\n    agent.Profile.get(username)\n      .then(action(({ profile }: { profile: Profile }) => { this.profile = profile; }))\n      .finally(action(() => { this.isLoadingProfile = false; }))\n  }\n\n  follow() {\n    if (this.profile && !this.profile.following) {\n      this.profile.following = true;\n      agent.Profile.follow(this.profile.username)\n        .catch(action(() => { this.profile!.following = false }));\n    }\n  }\n\n  unfollow() {\n    if (this.profile && this.profile.following) {\n      this.profile.following = false;\n      agent.Profile.unfollow(this.profile.username)\n        .catch(action(() => { this.profile!.following = true }));\n    }\n  }\n}\n\nexport default new ProfileStore();\n","import articleStore, { ArticleStore } from './articleStore';\nimport commentStore, { CommentStore } from './commentStore';\nimport editorStore, { EditorStore } from './editorStore';\nimport commonStore, { CommonStore } from './commonStore';\nimport authStore, { AuthStore } from './authStore';\nimport userStore, { UserStore } from './userStore';\nimport profileStore, { ProfileStore } from './profileStore';\n\nexport type RootStore = {\n  articleStore: ArticleStore;\n  commentStore: CommentStore;\n  editorStore: EditorStore;\n  authStore: AuthStore;\n  commonStore: CommonStore;\n  profileStore: ProfileStore;\n  userStore: UserStore;\n}\n\nconst rootStore: RootStore = {\n  articleStore,\n  commentStore,\n  editorStore,\n  authStore,\n  commonStore,\n  profileStore,\n  userStore\n};\n\nexport default rootStore;","import React from 'react';\nimport { useLocalObservable } from 'mobx-react-lite';\nimport rootStore, { RootStore } from './stores'\n\nconst storeContext = React.createContext<RootStore | null>(null);\n\nexport const StoreProvider = ({ children }: { children: React.ReactNode }) => {\n  const store = useLocalObservable(() => rootStore);\n  return <storeContext.Provider value={store}>{children}</storeContext.Provider>;\n}\n\nexport const useStore = () => {\n  const store = React.useContext(storeContext);\n  if (!store) {\n    // this is especially useful in TypeScript so you don't need to be checking for null all the time\n    throw new Error('useStore must be used within a StoreProvider.');\n  }\n  return store;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Observer } from 'mobx-react-lite';\nimport { useStore } from '../store'\n\nconst LoggedOutView = (props: any) => {\n  if (!props.currentUser) {\n    return (\n      <ul className=\"nav navbar-nav pull-xs-right\">\n\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"nav-link\">\n            Home\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to=\"/login\" className=\"nav-link\">\n            Sign in\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to=\"/register\" className=\"nav-link\">\n            Sign up\n          </Link>\n        </li>\n\n      </ul>\n    );\n  }\n  return null;\n};\n\nconst LoggedInView = (props: any) => {\n  if (props.currentUser) {\n    return (\n      <ul className=\"nav navbar-nav pull-xs-right\">\n\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"nav-link\">\n            Home\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to=\"/editor\" className=\"nav-link\">\n            <i className=\"ion-compose\" />&nbsp;New Post\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to=\"/settings\" className=\"nav-link\">\n            <i className=\"ion-gear-a\" />&nbsp;Settings\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link\n            to={`/@${props.currentUser.username}`}\n            className=\"nav-link\"\n          >\n            <img src={props.currentUser.image} className=\"user-pic\" alt=\"\" />\n            {props.currentUser.username}\n          </Link>\n        </li>\n\n      </ul>\n    );\n  }\n\n  return null;\n};\n\nconst Header: React.FC = () => {\n  const { commonStore, userStore } = useStore()\n  return <Observer>{() => (\n    <nav className=\"navbar navbar-light\">\n      <div className=\"container\">\n\n        <Link to=\"/\" className=\"navbar-brand\">\n          {commonStore.appName.toLowerCase()}\n        </Link>\n\n        <LoggedOutView currentUser={userStore.currentUser} />\n\n        <LoggedInView currentUser={userStore.currentUser} />\n      </div>\n    </nav>\n  )}</Observer>\n}\n\nexport default Header;\n","import React from 'react';\n\ntype Props = {\n  appName: string;\n  token: string | null;\n}\n\nconst Banner: React.FC<Props> = ({ appName, token }) => {\n  if (token) {\n    return null;\n  }\n  return (\n    <div className=\"banner\">\n      <div className=\"container\">\n        <h1 className=\"logo-font\">\n          {appName.toLowerCase()}\n        </h1>\n        <p>A place to share your knowledge.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React, { MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Observer } from 'mobx-react-lite';\nimport { useStore } from '../store';\n\nconst FAVORITED_CLASS = 'btn btn-sm btn-primary';\nconst NOT_FAVORITED_CLASS = 'btn btn-sm btn-outline-primary';\n\nconst ArticlePreview: React.FC<any> = props => {\n  const { articleStore } = useStore();\n\n  const handleClickFavorite = (ev: MouseEvent<HTMLButtonElement>) => {\n    ev.preventDefault();\n    const { article } = props;\n    if (article.favorited) {\n      articleStore.unmakeFavorite(article.slug);\n    } else {\n      articleStore.makeFavorite(article.slug);\n    }\n  };\n\n  return <Observer>{() => {\n    const { article } = props;\n    const favoriteButtonClass = article.favorited ? FAVORITED_CLASS : NOT_FAVORITED_CLASS;\n\n    return (\n      <div className=\"article-preview\">\n        <div className=\"article-meta\">\n          <Link to={`/@${article.author.username}`}>\n            <img src={article.author.image} alt=\"\" />\n          </Link>\n\n          <div className=\"info\">\n            <Link className=\"author\" to={`/@${article.author.username}`}>\n              {article.author.username}\n            </Link>\n            <span className=\"date\">\n            {new Date(article.createdAt).toDateString()}\n          </span>\n          </div>\n\n          <div className=\"pull-xs-right\">\n            <button className={favoriteButtonClass} onClick={handleClickFavorite}>\n              <i className=\"ion-heart\" /> {article.favoritesCount}\n            </button>\n          </div>\n        </div>\n\n        <Link to={`/article/${article.slug}`} className=\"preview-link\">\n          <h1>{article.title}</h1>\n          <p>{article.description}</p>\n          <span>Read more...</span>\n          <ul className=\"tag-list\">\n            {\n              article.tagList.map((tag: string) => {\n                return (\n                  <li className=\"tag-default tag-pill tag-outline\" key={tag}>\n                    {tag}\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </Link>\n      </div>\n    );\n  }}</Observer>\n};\n\n\nexport default ArticlePreview;","import React, { MouseEvent } from 'react';\n\ntype Props = {\n  currentPage: number;\n  totalPagesCount: number;\n  onSetPage: (v: number) => void\n};\n\nconst ListPagination: React.FC<Props> = props => {\n  if (props.totalPagesCount < 2) {\n    return null;\n  }\n\n  const range = [];\n  for (let i = 0; i < props.totalPagesCount; ++i) {\n    range.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n\n        {\n          range.map(v => {\n            const isCurrent = v === props.currentPage;\n            const onClick = (ev: MouseEvent<HTMLLIElement>) => {\n              ev.preventDefault();\n              props.onSetPage(v);\n            };\n            return (\n              <li\n                className={ isCurrent ? 'page-item active' : 'page-item' }\n                onClick={onClick}\n                key={v.toString()}\n              >\n\n                <a className=\"page-link\" href=\"\">{v + 1}</a>\n\n              </li>\n            );\n          })\n        }\n\n      </ul>\n    </nav>\n  );\n};\n\nexport default ListPagination;\n","import React, { CSSProperties } from 'react';\n\nconst style: CSSProperties  = {\n  borderRadius: '50%',\n  width: '40px',\n  height: '40px',\n  margin: '90px auto',\n  position: 'relative',\n  borderTop: '3px solid rgba(0, 0, 0, 0.1)',\n  borderRight: '3px solid rgba(0, 0, 0, 0.1)',\n  borderBottom: '3px solid rgba(0, 0, 0, 0.1)',\n  borderLeft: '3px solid #818a91',\n  transform: 'translateZ(0)',\n  animation: 'loading-spinner 0.5s infinite linear',\n};\n\nconst LoadingSpinner: React.FC = () => (\n  <div className=\"loading-spinner\" style={style}>\n    <style>\n    {`\n    @keyframes loading-spinner {\n      0% { transform : rotate(0deg); }\n      100% { transform : rotate(360deg); }\n    }\n    `}\n    </style>\n  </div>\n);\n\nexport default LoadingSpinner;\n","import ArticlePreview from './ArticlePreview';\nimport ListPagination from './ListPagination';\nimport LoadingSpinner from './LoadingSpinner';\nimport React from 'react';\n\nconst ArticleList: React.FC<any> = props => {\n  if (props.loading && props.articles.length === 0) {\n    return (\n      <LoadingSpinner />\n    );\n  }\n\n  if (props.articles.length === 0) {\n    return (\n      <div className=\"article-preview\">\n        No articles are here... yet.\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {\n        props.articles.map((article: any) => {\n          return (\n            <ArticlePreview article={article} key={article.slug} />\n          );\n        })\n      }\n\n      <ListPagination\n        onSetPage={props.onSetPage}\n        totalPagesCount={props.totalPagesCount}\n        currentPage={props.currentPage}\n      />\n    </div>\n  );\n};\n\nexport default ArticleList;\n","import React, { useCallback, useEffect } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { Observer } from \"mobx-react-lite\";\nimport { parse as qsParse } from \"query-string\";\nimport { useStore } from '../../store';\nimport ArticleList from \"../ArticleList\";\n\nconst YourFeedTab = (props: any) => {\n  if (props.currentUser) {\n    return (\n      <li className=\"nav-item\">\n        <NavLink\n          className=\"nav-link\"\n          isActive={(match, location) => {\n            return location.search.match(\"tab=feed\") ? true : false;\n          }}\n          to={{\n            pathname: \"/\",\n            search: \"?tab=feed\"\n          }}\n        >\n          Your Feed\n        </NavLink>\n      </li>\n    );\n  }\n  return null;\n};\n\nconst GlobalFeedTab = (props: any) => {\n  return (\n    <li className=\"nav-item\">\n      <NavLink\n        className=\"nav-link\"\n        isActive={(match, location) => {\n          return !location.search.match(/tab=(feed|tag)/) ? true : false;\n        }}\n        to={{\n          pathname: \"/\",\n          search: \"?tab=all\"\n        }}\n      >\n        Global Feed\n      </NavLink>\n    </li>\n  );\n};\n\nconst TagFilterTab = (props: any) => {\n  if (!props.tag) {\n    return null;\n  }\n\n  return (\n    <li className=\"nav-item\">\n      <a href=\"\" className=\"nav-link active\">\n        <i className=\"ion-pound\" /> {props.tag}\n      </a>\n    </li>\n  );\n};\n\nconst MainView: React.FC = () => {\n  const location = useLocation();\n  const { articleStore, userStore } = useStore();\n  \n  const tab = qsParse(location.search).tab || \"all\";\n  const tag = qsParse(location.search).tag || \"\";\n\n  const getPredicate = useCallback((tab, tag) => {\n    switch (tab) {\n      case \"feed\":\n        return { myFeed: true };\n      case \"tag\":\n        return { tag };\n      default:\n        return {};\n    }\n  }, []);\n\n  const handleSetPage = (page: number) => {\n    articleStore.setPage(page);\n    articleStore.loadArticles();\n  };\n  \n  useEffect(() => {\n    articleStore.setPredicate(getPredicate(tab, tag));\n    articleStore.loadArticles();\n  }, [articleStore, getPredicate, tab, tag]);\n\n\n  return <Observer>{() => {\n    const { currentUser } = userStore;\n    const {\n      articles,\n      isLoading,\n      page,\n      totalPagesCount\n    } = articleStore;\n\n    return (\n      <div className=\"col-md-9\">\n        <div className=\"feed-toggle\">\n          <ul className=\"nav nav-pills outline-active\">\n            <YourFeedTab currentUser={currentUser} tab={tab} />\n\n            <GlobalFeedTab tab={tab} />\n\n            <TagFilterTab tag={tag} />\n          </ul>\n        </div>\n\n        <ArticleList\n          articles={articles}\n          loading={isLoading}\n          totalPagesCount={totalPagesCount}\n          currentPage={page}\n          onSetPage={handleSetPage}\n        />\n      </div>\n    );\n  }}</Observer>\n};\n\nexport default MainView;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\ntype Props = {\n  loading: boolean;\n  tags: string[];\n}\n\nconst Tags: React.FC<Props> = props => {\n  const { loading, tags } = props;\n  if (loading) {\n    return <LoadingSpinner />;\n  } else if (tags) {\n    return (\n      <div className=\"tag-list\">\n        {tags.map(tag => {\n          return (\n            <Link\n              to={{\n                pathname: \"/\",\n                search: \"?tab=tag&tag=\" + tag\n              }}\n              className=\"tag-default tag-pill\"\n              key={tag}\n            >\n              {tag}\n            </Link>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Tags;\n","import React, { useEffect } from 'react';\nimport { Observer } from 'mobx-react-lite';\nimport { useStore } from '../../store';\nimport Banner from './Banner';\nimport MainView from './MainView'\nimport Tags from './Tags';\n\nconst Home: React.FC = () => {\n  const { commonStore } = useStore();\n  \n  useEffect(() => {\n    async function loadTags() {\n      await commonStore.loadTags();\n    }\n    loadTags();\n  }, [ commonStore ]);\n\n  return <Observer>{() => {\n    const { appName, isLoadingTags, tags, token } = commonStore;\n    return (\n      <div className=\"home-page\">\n\n        <Banner token={token} appName={appName} />\n\n        <div className=\"container page\">\n          <div className=\"row\">\n\n            <MainView />\n\n            <div className=\"col-md-3\">\n              <div className=\"sidebar\">\n                <p>Popular Tags</p>\n\n                <Tags\n                  loading={isLoadingTags}\n                  tags={tags}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }}</Observer>\n}\n\nexport default Home;","import React from 'react';\n\ntype Props = {\n  errors?: any[]\n}\n\nconst ListErrors: React.FC<Props> = props => {\n  const errors = props.errors;\n  if (errors) {\n    return (\n      <ul className=\"error-messages\">\n        {\n          Object.keys(errors).map((key: any) => {\n            return (\n              <li key={key}>\n                {key} {errors[key]}\n              </li>\n            );\n          })\n        }\n      </ul>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ListErrors;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Observer } from 'mobx-react-lite';\nimport { useStore } from '../store';\nimport ListErrors from './ListErrors';\n\nconst Login: React.FC = (props: any) => {\n  const { authStore } = useStore();\n  const handleEmailChange = (e: any) => authStore.setEmail(e.target.value);\n  const handlePasswordChange = (e: any) => authStore.setPassword(e.target.value);\n  const handleSubmitForm = (e: any) => {\n    e.preventDefault();\n    authStore.login()\n      .then(() => props.history.replace('/'))\n      .catch(() => {});\n  };\n  useEffect(() => {\n    return () => authStore.reset();\n  }, [ authStore ]);\n\n  return <Observer>{() => {\n    const { values, errors, inProgress } = authStore;\n    return (\n      <div className=\"auth-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\n              <h1 className=\"text-xs-center\">Sign In</h1>\n              <p className=\"text-xs-center\">\n                <Link to=\"register\">\n                  Need an account?\n                </Link>\n              </p>\n\n              <ListErrors errors={errors} />\n\n              <form onSubmit={handleSubmitForm}>\n                <fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      value={values.email}\n                      onChange={handleEmailChange}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={values.password}\n                      onChange={handlePasswordChange}\n                    />\n                  </fieldset>\n\n                  <button\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\n                    type=\"submit\"\n                    disabled={inProgress}\n                  >\n                    Sign in\n                  </button>\n\n                </fieldset>\n              </form>\n            </div>\n\n          </div>\n        </div>\n      </div>\n     )\n  }}</Observer>\n}\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Observer } from 'mobx-react-lite';\nimport { useStore } from '../store';\nimport ListErrors from './ListErrors';\n\nconst Register: React.FC = (props: any) => {\n  const { authStore } = useStore()\n  const handleUsernameChange = (e: any) => authStore.setUsername(e.target.value);\n  const handleEmailChange = (e: any) => authStore.setEmail(e.target.value);\n  const handlePasswordChange = (e: any) => authStore.setPassword(e.target.value);\n  const handleSubmitForm = (e: any) => {\n    e.preventDefault();\n    authStore.register()\n      .then(() => props.history.replace('/'))\n      .catch(() => {});\n  };\n\n  return <Observer>{() => {\n    const { values, errors, inProgress } = authStore;\n\n    return (\n      <div className=\"auth-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\n              <h1 className=\"text-xs-center\">Sign Up</h1>\n              <p className=\"text-xs-center\">\n                <Link to=\"login\">\n                  Have an account?\n                </Link>\n              </p>\n\n              <ListErrors errors={errors} />\n\n              <form onSubmit={handleSubmitForm}>\n                <fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      value={values.username}\n                      onChange={handleUsernameChange}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      value={values.email}\n                      onChange={handleEmailChange}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={values.password}\n                      onChange={handlePasswordChange}\n                    />\n                  </fieldset>\n\n                  <button\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\n                    type=\"submit\"\n                    disabled={inProgress}\n                  >\n                    Sign in\n                  </button>\n\n                </fieldset>\n              </form>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    );\n  }}</Observer>\n};\n\nexport default Register;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Observer } from 'mobx-react-lite';\nimport { useStore } from '../store';\n\nconst PrivateRoute: React.FC<any> = (props: any) => {\n  const { userStore } = useStore();\n  return (\n    <Observer>{() => {\n      if (userStore.currentUser) return <Route {...props} />;\n      return <Redirect to=\"/\" />;\n    }}</Observer>\n  );\n};\n\nexport default PrivateRoute;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Observer } from \"mobx-react-lite\";\nimport { useStore } from \"../store\";\nimport ListErrors from \"./ListErrors\";\n\nconst SettingsForm: React.FC<any> = (props) => {\n  const { userStore } = useStore();\n  const [state, setState] = useState({\n    image: \"\",\n    username: \"\",\n    bio: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const updateState = (field: string) => (ev: any) => {\n    const newState = Object.assign({}, state, { [field]: ev.target.value });\n    setState(newState);\n  };\n\n  const submitForm = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    const user = Object.assign({}, state);\n    if (!user.password) {\n      delete user.password;\n    }\n\n    props.onSubmitForm(user);\n  };\n  \n  useEffect(() => {\n    if (userStore.currentUser) {\n      setState({\n        image: userStore.currentUser.image || \"\",\n        username: userStore.currentUser.username || \"\",\n        bio: userStore.currentUser.bio || \"\",\n        email: userStore.currentUser.email || \"\",\n        password: \"\"\n      });\n    }\n  }, [ userStore.currentUser ]);\n  \n  return <Observer>{() => (\n    <form onSubmit={submitForm}>\n      <fieldset>\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"URL of profile picture\"\n            value={state.image}\n            onChange={updateState(\"image\")}\n          />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"text\"\n            placeholder=\"Username\"\n            value={state.username}\n            onChange={updateState(\"username\")}\n          />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <textarea\n            className=\"form-control form-control-lg\"\n            rows={8}\n            placeholder=\"Short bio about you\"\n            value={state.bio}\n            onChange={updateState(\"bio\")}\n          ></textarea>\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"email\"\n            placeholder=\"Email\"\n            value={state.email}\n            onChange={updateState(\"email\")}\n          />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <input\n            className=\"form-control form-control-lg\"\n            type=\"password\"\n            placeholder=\"New Password\"\n            value={state.password}\n            onChange={updateState(\"password\")}\n          />\n        </fieldset>\n\n        <button\n          className=\"btn btn-lg btn-primary pull-xs-right\"\n          type=\"submit\"\n          disabled={userStore.updatingUser}\n        >\n          Update Settings\n        </button>\n      </fieldset>\n    </form>\n  )}</Observer>\n}\n\nconst Settings: React.FC = () => {\n  const history = useHistory();\n  const { authStore, userStore } = useStore();\n  const handleClickLogout = () =>\n    authStore.logout().then(() => history.replace(\"/\"));\n\n  return <Observer>{() => (\n    <div className=\"settings-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Your Settings</h1>\n\n            <ListErrors errors={userStore.updatingUserErrors} />\n\n            <SettingsForm\n              currentUser={userStore.currentUser}\n              onSubmitForm={(user: any) => userStore.updateUser(user)}\n            />\n\n            <hr />\n\n            <button\n              className=\"btn btn-outline-danger\"\n              onClick={handleClickLogout}\n            >\n              Or click here to logout.\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )}</Observer>\n}\n\nexport default Settings;\n","import React, { CSSProperties } from 'react';\n\nconst wrapperStyle: CSSProperties = {\n  display: 'flex',\n  justifyContent: 'center',\n};\n\nconst errorStyle: CSSProperties  = {\n  display: 'inline-block',\n  margin: '20px auto',\n  borderRadius: '4px',\n  padding: '8px 15px',\n  color: 'rgb(240, 45, 45)',\n  fontStyle: 'bold',\n  backgroundColor: 'rgba(240, 45, 45, 0.1)'\n};\n\ntype Props = {\n  message: string\n}\n\nconst RedError: React.FC<Props> = props => {\n  return (\n    <div style={wrapperStyle}>\n      <div style={errorStyle}>\n        {props.message}\n      </div>\n    </div>\n  );\n};\n\nexport default RedError;\n","import React, { useEffect, useMemo} from \"react\";\nimport { NavLink, Link, useLocation, useParams } from \"react-router-dom\";\nimport { Observer } from \"mobx-react-lite\";\nimport { useStore } from '../store';\nimport RedError from \"./RedError\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ArticleList from \"./ArticleList\";\n\nconst EditProfileSettings: React.FC<any> = props => {\n  if (props.isUser) {\n    return (\n      <Link\n        to=\"/settings\"\n        className=\"btn btn-sm btn-outline-secondary action-btn\"\n      >\n        <i className=\"ion-gear-a\" /> Edit Profile Settings\n      </Link>\n    );\n  }\n  return null;\n};\n\nconst FollowUserButton: React.FC<any> = props => {\n  if (props.isUser) {\n    return null;\n  }\n\n  let classes = \"btn btn-sm action-btn\";\n  if (props.following) {\n    classes += \" btn-secondary\";\n  } else {\n    classes += \" btn-outline-secondary\";\n  }\n\n  const handleClick = (ev: any) => {\n    ev.preventDefault();\n    if (props.following) {\n      props.unfollow(props.username);\n    } else {\n      props.follow(props.username);\n    }\n  };\n\n  return (\n    <button className={classes} onClick={handleClick}>\n      <i className=\"ion-plus-round\" />\n      &nbsp;\n      {props.following ? \"Unfollow\" : \"Follow\"} {props.username}\n    </button>\n  );\n};\n\nconst Tabs: React.FC<any> = props => {\n  const { profile } = props;\n  return (\n    <ul className=\"nav nav-pills outline-active\">\n      <li className=\"nav-item\">\n        <NavLink\n          className=\"nav-link\"\n          isActive={(match, location) => {\n            return location.pathname.match(\"/favorites\") ? false : true;\n          }}\n          to={`/@${profile.username}`}\n        >\n          My Articles\n        </NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to={`/@${profile.username}/favorites`}>\n          Favorited Articles\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst Profile: React.FC = () => {\n  const location = useLocation();\n  const params: any = useParams();\n  const { articleStore, profileStore, userStore } = useStore();\n\n  const handleFollow = () => profileStore.follow();\n  const handleUnfollow = () => profileStore.unfollow();\n\n  const handleSetPage = (page: number) => {\n    articleStore.setPage(page);\n    articleStore.loadArticles();\n  };\n  \n  const tab = /\\/favorites/.test(location.pathname) ? \"favorites\" : \"all\";\n  const predicate = useMemo(() => tab === \"favorites\" ? { favoritedBy: params.username } : { author: params.username }, [tab, params.username])\n\n  useEffect(() => {\n    profileStore.loadProfile(params.username);\n    articleStore.setPredicate(predicate);\n    articleStore.loadArticles();\n  }, [ articleStore, profileStore, predicate, location.pathname, params.username ]);\n\n  return <Observer>{() => {\n    const { profile, isLoadingProfile } = profileStore;\n    const { currentUser } = userStore;\n\n    if (isLoadingProfile && !profile) return <LoadingSpinner />;\n    if (!profile) return <RedError message=\"Can't load profile\" />;\n\n    const isUser = currentUser && currentUser.username === profile.username;\n\n    return (\n      <div className=\"profile-page\">\n        <div className=\"user-info\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-xs-12 col-md-10 offset-md-1\">\n                <img src={profile.image} className=\"user-img\" alt=\"\" />\n                <h4>{profile.username}</h4>\n                <p>{profile.bio}</p>\n\n                <EditProfileSettings isUser={isUser} />\n                <FollowUserButton\n                  isUser={isUser}\n                  username={profile.username}\n                  following={profile.following}\n                  follow={handleFollow}\n                  unfollow={handleUnfollow}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-10 offset-md-1\">\n              <div className=\"articles-toggle\"><Tabs profile={profile} /></div>\n\n              <ArticleList\n                articles={articleStore.articles}\n                totalPagesCount={articleStore.totalPagesCount}\n                onSetPage={handleSetPage}\n                loading={articleStore.isLoading}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }}</Observer>;\n}\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticleActions: React.FC<any> = props => {\n  const article = props.article;\n  const handleDelete = () => props.onDelete(article.slug);\n\n  if (props.canModify) {\n    return (\n      <span>\n\n        <Link\n          to={`/editor/${article.slug}`}\n          className=\"btn btn-outline-secondary btn-sm\"\n        >\n          <i className=\"ion-edit\" /> Edit Article\n        </Link>\n\n        <button className=\"btn btn-outline-danger btn-sm\" onClick={handleDelete}>\n          <i className=\"ion-trash-a\" /> Delete Article\n        </button>\n\n      </span>\n    );\n  }\n\n  return (\n    <span />\n  );\n};\n\nexport default ArticleActions;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport ArticleActions from './ArticleActions';\n\n\nconst ArticleMeta = observer((props: any) => {\n  const article = props.article;\n  return (\n    <div className=\"article-meta\">\n      <Link to={`/@${article.author.username}`}>\n        <img src={article.author.image} alt=\"\" />\n      </Link>\n\n      <div className=\"info\">\n        <Link to={`/@${article.author.username}`} className=\"author\">\n          {article.author.username}\n        </Link>\n        <span className=\"date\">\n          {new Date(article.createdAt).toDateString()}\n        </span>\n      </div>\n\n      <ArticleActions canModify={props.canModify} article={article} onDelete={props.onDelete} />\n    </div>\n  );\n});\n\nexport default ArticleMeta;\n","import React, { useState } from 'react';\nimport { Observer } from 'mobx-react-lite';\nimport { useStore } from '../../store';\n\nconst CommentInput: React.FC<any> = props => {\n  const [body, set] = useState<string>('');\n  const { commentStore } = useStore();\n\n  const handleBodyChange = (ev: any) => {\n    set(ev.target.value);\n  };\n\n  const createComment = (ev: any) => {\n    ev.preventDefault();\n    commentStore.createComment({ body })\n      .then(() => set(''));\n  };\n\n  return <Observer>{() => {\n    const { isCreatingComment } = commentStore;\n    return (\n      <form className=\"card comment-form\" onSubmit={createComment}>\n        <div className=\"card-block\">\n          <textarea className=\"form-control\"\n            placeholder=\"Write a comment...\"\n            value={body}\n            disabled={isCreatingComment}\n            onChange={handleBodyChange}\n            rows={3}\n          />\n        </div>\n        <div className=\"card-footer\">\n          <img\n            src={props.currentUser.image}\n            className=\"comment-author-img\"\n            alt=\"\"\n          />\n          <button\n            className=\"btn btn-sm btn-primary\"\n            type=\"submit\"\n          >\n            Post Comment\n          </button>\n        </div>\n      </form>\n    );\n  }}</Observer>\n};\n\nexport default CommentInput;\n","import React from 'react';\n\nconst DeleteButton: React.FC<any> = props => {\n  const handleClick = () => props.onDelete(props.commentId);\n\n  if (props.show) {\n    return (\n      <span className=\"mod-options\">\n        <i className=\"ion-trash-a\" onClick={handleClick} />\n      </span>\n    );\n  }\n  return null;\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport DeleteButton from './DeleteButton';\n\nconst Comment: React.FC<any> = props => {\n  const comment = props.comment;\n  const show = props.currentUser &&\n    props.currentUser.username === comment.author.username;\n  return (\n    <div className=\"card\">\n      <div className=\"card-block\">\n        <p className=\"card-text\">{comment.body}</p>\n      </div>\n      <div className=\"card-footer\">\n        <Link\n          to={`/@${comment.author.username}`}\n          className=\"comment-author\"\n        >\n          <img src={comment.author.image} className=\"comment-author-img\" alt=\"\" />\n        </Link>\n        &nbsp;\n        <Link\n          to={`/@${comment.author.username}`}\n          className=\"comment-author\"\n        >\n          {comment.author.username}\n        </Link>\n        <span className=\"date-posted\">\n          {new Date(comment.createdAt).toDateString()}\n        </span>\n        <DeleteButton\n          show={show}\n          slug={props.slug}\n          commentId={comment.id}\n          onDelete={props.onDelete}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Comment from './Comment';\n\nconst CommentList = observer((props: any) => {\n  return (\n    <div>\n      {\n        props.comments.map((comment: any) => {\n          return (\n            <Comment\n              comment={comment}\n              currentUser={props.currentUser}\n              slug={props.slug}\n              key={comment.id}\n              onDelete={props.onDelete}\n            />\n          );\n        })\n      }\n    </div>\n  );\n});\n\nexport default CommentList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CommentInput from './CommentInput';\nimport CommentList from './CommentList';\nimport ListErrors from '../ListErrors';\n\nconst CommentContainer: React.FC<any> = props => {\n  if (props.currentUser) {\n    return (\n      <div className=\"col-xs-12 col-md-8 offset-md-2\">\n        <div>\n          <ListErrors errors={props.errors} />\n          <CommentInput slug={props.slug} currentUser={props.currentUser} />\n        </div>\n\n        <CommentList\n          comments={props.comments}\n          slug={props.slug}\n          currentUser={props.currentUser}\n          onDelete={props.onDelete}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"col-xs-12 col-md-8 offset-md-2\">\n        <p>\n          <Link to=\"/login\">Sign in</Link>\n          &nbsp;or&nbsp;\n          <Link to=\"/register\">sign up</Link>\n          &nbsp;to add comments on this article.\n        </p>\n\n        <CommentList\n          comments={props.comments}\n          slug={props.slug}\n          currentUser={props.currentUser}\n          onDelete={props.onDelete}\n        />\n      </div>\n    );\n  }\n};\n\nexport default CommentContainer;\n","import React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Observer } from \"mobx-react-lite\";\nimport marked from \"marked\";\n\nimport { useStore } from '../../store';\nimport RedError from \"../RedError\";\nimport ArticleMeta from \"./ArticleMeta\";\nimport CommentContainer from \"./CommentContainer\";\n\nconst Article: React.FC = () => {\n  const history = useHistory();\n  const { slug } = useParams();\n  const { articleStore, commentStore, userStore } = useStore();\n  useEffect(() => {\n    if (slug) {\n      articleStore.loadArticle(slug, { acceptCached: true });\n      commentStore.setArticleSlug(slug);\n      commentStore.loadComments();\n    }\n  }, [ articleStore, commentStore, slug ]);\n\n  const handleDeleteArticle = (slug: string) => {\n    articleStore\n      .deleteArticle(slug)\n      .then(() => history.replace(\"/\"));\n  };\n\n  const handleDeleteComment = (id: number) => {\n    commentStore.deleteComment(id);\n  };\n\n  return <Observer>{() => {\n    const { currentUser } = userStore;\n    const { comments, commentErrors } = commentStore;\n    const article = articleStore.getArticle(slug || '');\n\n    if (!article) return <RedError message=\"Can't load article\" />;\n\n    const markup = { __html: marked(article.body, { sanitize: true }) };\n    const canModify =\n      currentUser && currentUser.username === article.author.username;\n    return (\n      <div className=\"article-page\">\n        <div className=\"banner\">\n          <div className=\"container\">\n            <h1>{article.title}</h1>\n            <ArticleMeta\n              article={article}\n              canModify={canModify}\n              onDelete={handleDeleteArticle}\n            />\n          </div>\n        </div>\n\n        <div className=\"container page\">\n          <div className=\"row article-content\">\n            <div className=\"col-xs-12\">\n              <div dangerouslySetInnerHTML={markup} />\n\n              <ul className=\"tag-list\">\n                {article.tagList.map((tag: string) => {\n                  return (\n                    <li className=\"tag-default tag-pill tag-outline\" key={tag}>\n                      {tag}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n\n          <hr />\n\n          <div className=\"article-actions\" />\n\n          <div className=\"row\">\n            {<CommentContainer\n              comments={comments}\n              errors={commentErrors}\n              slug={slug}\n              currentUser={currentUser}\n              onDelete={handleDeleteComment}\n            />}\n          </div>\n        </div>\n      </div>\n    );\n  }}</Observer>;\n};\n\nexport default Article;","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Observer } from \"mobx-react-lite\";\nimport { useStore } from \"../store\";\nimport ListErrors from \"./ListErrors\";\n\nconst Editor: React.FC = () => {\n  const history = useHistory();\n  const { slug } = useParams();\n  const [tagInput, set] = useState<string>('');\n  const { editorStore } = useStore();\n\n  useEffect(() => {\n    if (slug) {\n      editorStore.setArticleSlug(slug);\n      editorStore.loadInitialData();\n    }\n  }, [ editorStore, slug ]);\n\n  const changeTitle = (e: any) => editorStore.setTitle(e.target.value);\n  const changeDescription = (e: any) =>\n    editorStore.setDescription(e.target.value);\n  const changeBody = (e: any) => editorStore.setBody(e.target.value);\n  const changeTagInput = (e: any) => set(e.target.value);\n\n  const handleTagInputKeyDown = (ev: any) => {\n    switch (ev.keyCode) {\n      case 13: // Enter\n      case 9: // Tab\n      case 188: // ,\n        if (ev.keyCode !== 9) ev.preventDefault();\n        handleAddTag();\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleAddTag = () => {\n    if (tagInput) {\n      editorStore.addTag(tagInput.trim());\n      set('');\n    }\n  };\n\n  const handleRemoveTag = (tag: string) => {\n    if (editorStore.inProgress) return;\n    editorStore.removeTag(tag);\n  };\n\n  const submitForm = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n    editorStore.submit().then((article: any) => {\n      editorStore.reset();\n      history.replace(`/article/${article.slug}`);\n    });\n  };\n\n  return <Observer>{() => {\n    const {\n      inProgress,\n      errors,\n      title,\n      description,\n      body,\n      tagList\n    } = editorStore;\n\n    return (\n      <div className=\"editor-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-10 offset-md-1 col-xs-12\">\n              <ListErrors errors={errors} />\n\n              <form onSubmit={submitForm}>\n                <fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"text\"\n                      placeholder=\"Article Title\"\n                      value={title}\n                      onChange={changeTitle}\n                      disabled={inProgress}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"What's this article about?\"\n                      value={description}\n                      onChange={changeDescription}\n                      disabled={inProgress}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <textarea\n                      className=\"form-control\"\n                      rows={8}\n                      placeholder=\"Write your article (in markdown)\"\n                      value={body}\n                      onChange={changeBody}\n                      disabled={inProgress}\n                    />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Enter tags\"\n                      value={tagInput}\n                      onChange={changeTagInput}\n                      onBlur={handleAddTag}\n                      onKeyDown={handleTagInputKeyDown}\n                      disabled={inProgress}\n                    />\n\n                    <div className=\"tag-list\">\n                      {tagList.map(tag => {\n                        return (\n                          <span className=\"tag-default tag-pill\" key={tag}>\n                            <i\n                              className=\"ion-close-round\"\n                              onClick={() => handleRemoveTag(tag)}\n                            />\n                            {tag}\n                          </span>\n                        );\n                      })}\n                    </div>\n                  </fieldset>\n\n                  <button\n                    className=\"btn btn-lg pull-xs-right btn-primary\"\n                    type=\"submit\"\n                    disabled={inProgress}\n                  >\n                    Publish Article\n                  </button>\n                </fieldset>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }}</Observer>;\n};\n\nexport default Editor;","import React, { useEffect } from 'react';\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom';\nimport { useStore } from './store'\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport PrivateRoute from './components/PrivateRoute';\nimport Settings from './components/Settings';\nimport Profile from './components/Profile';\nimport Article from './components/Article';\nimport Editor from './components/Editor';\n\nconst App: React.FC = () => {\n  const { commonStore, userStore } = useStore()\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.pullUser()\n        .finally(() => commonStore.setAppLoaded())\n    }\n  })\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <PrivateRoute path=\"/settings\" component={Settings} />\n        <Route path=\"/@:username\" component={Profile} />\n        <Route path=\"/@:username/favorites\" component={Profile} />\n        <Route path=\"/article/:slug\" component={Article} />\n        <Route path=\"/editor/:slug?\" component={Editor} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { StoreProvider } from './store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { observable, action, reaction, makeObservable } from 'mobx';\nimport agent from '../agent';\n\nexport class CommonStore {\n\n  appName = 'Conduit';\n  token = window.localStorage.getItem('jwt');\n  appLoaded = false;\n\n  tags: string[] = [];\n  isLoadingTags = false;\n\n  constructor() {\n    makeObservable(this, {\n      appName: observable,\n      token: observable,\n      appLoaded: observable,\n      tags: observable,\n      isLoadingTags: observable,\n      loadTags: action,\n      setToken: action,\n      setAppLoaded: action\n    });\n\n    reaction(\n      () => this.token,\n      token => {\n        if (token) {\n          window.localStorage.setItem('jwt', token);\n        } else {\n          window.localStorage.removeItem('jwt');\n        }\n      }\n    );\n  }\n\n  loadTags() {\n    this.isLoadingTags = true;\n    return agent.Tags.getAll()\n      .then(action(({ tags }: { tags: string[] }) => { this.tags = tags.map((t: string) => t.toLowerCase()); }))\n      .finally(action(() => { this.isLoadingTags = false; }))\n  }\n\n  setToken(token: string | null) {\n    this.token = token;\n  }\n\n  setAppLoaded() {\n    this.appLoaded = true;\n  }\n\n}\n\nexport default new CommonStore();"],"sourceRoot":""}